type: object
properties:
  drep_id:
    type: string
    description: Bech32 encoded addresses
  hex:
    type: string
    description: The raw bytes of the DRep
  url:
    type: string
    example: "https://stakenuts.com/drep.json"
    description: URL to the drep metadata
  hash:
    type: string
    example: 69c0c68cb57f4a5b4a87bad896fc274678e7aea98e200fa14a1cb40c0cab1d8c"
    description: Hash of the metadata file
  json_metadata:
    anyOf:
      - type: string
      - type: object
        additionalProperties: true
      - type: array
        items: {}
      - type: integer
      - type: number
      - type: boolean
      - type: "null"
    description: Content of the JSON metadata (validated CIP-119)
  bytes:
    type: string
    description: Content of the metadata (raw)
required:
  - drep_id
  - hex
  - url
  - hash
  - json_metadata
  - bytes
example:
  drep_id: drep15cfxz9exyn5rx0807zvxfrvslrjqfchrd4d47kv9e0f46uedqtc
  hex: a61261172624e8333ceff098648d90f8e404e2e36d5b5f5985cbd35d
  url: "https://aaa.xyz/drep.json"
  hash: a14a5ad4f36bddc00f92ddb39fd9ac633c0fd43f8bfa57758f9163d10ef916de
  json_metadata:
    {
      "@context":
        {
          "CIP100": "https://github.com/cardano-foundation/CIPs/blob/master/CIP-0100/README.md#",
          "CIP119": "https://github.com/cardano-foundation/CIPs/blob/master/CIP-0119/README.md#",
          "hashAlgorithm": "CIP100:hashAlgorithm",
          "body":
            {
              "@id": "CIP119:body",
              "@context":
                {
                  "references":
                    {
                      "@id": "CIP119:references",
                      "@container": "@set",
                      "@context":
                        {
                          "GovernanceMetadata": "CIP100:GovernanceMetadataReference",
                          "Other": "CIP100:OtherReference",
                          "label": "CIP100:reference-label",
                          "uri": "CIP100:reference-uri",
                        },
                    },
                  "paymentAddress": "CIP119:paymentAddress",
                  "givenName": "CIP119:givenName",
                  "image":
                    {
                      "@id": "CIP119:image",
                      "@context":
                        { "ImageObject": "https://schema.org/ImageObject" },
                    },
                  "objectives": "CIP119:objectives",
                  "motivations": "CIP119:motivations",
                  "qualifications": "CIP119:qualifications",
                },
            },
        },
      "hashAlgorithm": "blake2b-256",
      "body":
        {
          "paymentAddress": "addr1q86dnpkva4mm859c8ur7tjxn57zgsu6vg8pdetkdve3fsacnq7twy06u2ev5759vutpjgzfryx0ud8hzedhzerava35qwh3x34",
          "givenName": "Ryan Williams",
          "image":
            {
              "@type": "ImageObject",
              "contentUrl": "https://avatars.githubusercontent.com/u/44342099?v=4",
              "sha256": "2a21e4f7b20c8c72f573707b068fb8fc6d8c64d5035c4e18ecae287947fe2b2e",
            },
          "objectives": "Buy myself an island.",
          "motivations": "I really would like to own an island.",
          "qualifications": "I have my 100m swimming badge, so I would be qualified to be able to swim around island.",
          "references":
            [
              {
                "@type": "Other",
                "label": "A cool island for Ryan",
                "uri": "https://www.google.com/maps/place/World's+only+5th+order+recursive+island/@62.6511465,-97.7946829,15.75z/data=!4m14!1m7!3m6!1s0x5216a167810cee39:0x11431abdfe4c7421!2sWorld's+only+5th+order+recursive+island!8m2!3d62.651114!4d-97.7872244!16s%2Fg%2F11spwk2b6n!3m5!1s0x5216a167810cee39:0x11431abdfe4c7421!8m2!3d62.651114!4d-97.7872244!16s%2Fg%2F11spwk2b6n?authuser=0&entry=ttu",
              },
              {
                "@type": "Link",
                "label": "Ryan's Twitter",
                "uri": "https://twitter.com/Ryun1_",
              },
            ],
        },
    }
  bytes: \x7b0a20202240636f6e74657874223a207b0a2020202022406c616e6775616765223a2022656e2d7573222c0a2020202022434950313030223a202268747470733a2f2f6769746875622e636f6d2f63617264616e6f2d666f756e646174696f6e2f434950732f626c6f622f6d61737465722f4349502d303130302f524541444d452e6
