openapi: 3.0.0
info:
  version: "0.1.27"
  title: Blockfrost.io ~ API Documentation
  x-logo:
    url: https://staging.blockfrost.io/images/logo.svg
    altText: Blockfrost
  contact:
    name: Blockfrost Team
    url: "https://blockfrost.io"
    email: contact@blockfrost.io
  license:
    name: MIT
    url: "https://opensource.org/licenses/MIT"
  termsOfService: "https://blockfrost.io/terms"
  description: |
    Blockfrost is an API as a service that allows users to interact with the Cardano blockchain and parts of its ecosystem.

    ## Tokens

    After signing up on https://blockfrost.io, a `project_id` token is automatically generated for each project.
    HTTP header of your request MUST include this `project_id` in order to authenticate against Blockfrost servers.

    ## Available networks

    At the moment, you can use the following networks. Please, note that each network has its own `project_id`.

    <table>
      <tr><td><b>Network</b></td><td><b>Endpoint</b></td></tr>
      <tr><td>Cardano mainnet</td><td><tt>https://cardano-mainnet.blockfrost.io/api/v0</td></tt></tr>
      <tr><td>Cardano testnet</td><td><tt>https://cardano-testnet.blockfrost.io/api/v0</tt></td></tr>
      <tr><td>InterPlanetary File System</td><td><tt>https://ipfs.blockfrost.io/api/v0</tt></td></tr>
    </table>

    ## Concepts

    * All endpoints return either a JSON object or an array.
    * Data is returned in *ascending* (oldest first, newest last) order.
      * You might use the `?order=desc` query parameter to reverse this order.
    * By default, we return 100 results at a time. You have to use `?page=2` to list through the results.
    * All time and timestamp related fields (except `server_time`) are in seconds of UNIX time.
    * All amounts are returned in Lovelaces, where 1 ADA = 1 000 000 Lovelaces.
    * Addresses, accounts and pool IDs are in Bech32 format.
    * All values are case sensitive.
    * All hex encoded values are lower case.
    * Examples are not based on real data. Any resemblance to actual events is purely coincidental.
    * We allow to upload files up to 100MB of size to IPFS. This might increase in the future.

    ## Errors

    ### HTTP Status codes

    The following are HTTP status code your application might receive when reaching Blockfrost endpoints and
    it should handle all of these cases.

    * HTTP `400` return code is used when the request is not valid.
    * HTTP `402` return code is used when the projects exceed their daily request limit.
    * HTTP `403` return code is used when the request is not authenticated.
    * HTTP `404` return code is used when the resource doesn't exist.
    * HTTP `418` return code is used when the user has been auto-banned for flooding too much after previously receiving error code `402` or `429`.
    * HTTP `429` return code is used when the user has sent too many requests in a given amount of time and therefore has been rate-limited.
    * HTTP `500` return code is used when our endpoints are having a problem.

    ### Error codes

    An internal error code number is used for better indication of the error in question. It is passed using the following payload.

    ```json
    {
      "status_code": 403,
      "error": "Forbidden",
      "message": "Invalid project token."
    }
    ```
    ## Limits

     There are two types of limits we are enforcing:

     The first depends on your plan and is the number of request we allow per day. We defined the day from midnight to midnight of UTC time.

     The second is rate limiting. We limit an end user, distinguished by IP address, to 10 requests per second. On top of that, we allow
     each user to send burst of 500 requests, which cools off at rate of 10 requests per second. In essence, a user is allowed to make another
     whole burst after (currently) 500/10 = 50 seconds. E.g. if a user attemtps to make a call 3 seconds after whole burst, 30 requests will be processed.
     We believe this should be sufficient for most of the use cases. If it is not and you have a specific use case, please get in touch with us, and
     we will make sure to take it into account as much as we can.
     
    ## SDKs

    We support a number of SDKs that will help you in developing your application on top of Blockfrost.

    <table>
      <tr><td><b>Programming language</b></td><td><b>SDK</b></td></tr>
      <tr><td>JavaScript</td><td><a href="https://github.com/blockfrost/blockfrost-js">blockfrost-js</a></tr>
      <tr><td>Haskell</td><td><a href="https://github.com/blockfrost/blockfrost-haskell">blockfrost-haskell</a></tr>
    </table>

servers:
  - url: https://cardano-mainnet.blockfrost.io/api/v0/
    description: Cardano Mainnet network
  - url: https://cardano-testnet.blockfrost.io/api/v0/
    description: Cardano Testnet network
  - url: https://localhost:3000
    description: local

security:
  - ApiKeyAuth: []

tags:
  - name: Health
  - name: Metrics
  - name: Cardano » Accounts
  - name: Cardano » Addresses
  - name: Cardano » Assets
  - name: Cardano » Blocks
  - name: Cardano » Epochs
  - name: Cardano » Ledger
  - name: Cardano » Metadata
  - name: Cardano » Network
  - name: Cardano » Pools
  - name: Cardano » Scripts
  - name: Cardano » Transactions
  - name: IPFS » Add
  - name: IPFS » Gateway
  - name: IPFS » Pins

paths:
  /:
    get:
      tags:
        - Health
      summary: Root endpoint
      description: |
        Root endpoint has no other function than to point end users to documentation.
      responses:
        "200":
          description: Information pointing to the documentation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: "https://blockfrost.io/"
                  version:
                    type: string
                    example: "0.1.0"
                required:
                  - url
                  - version
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /health:
    get:
      tags:
        - Health
      summary: Backend health status
      description: |
        Return backend status as a boolean. Your application
            should handle situations when backend for the given chain is unavailable.
      responses:
        "200":
          description: Return the boolean indicating the health of the backend.
          content:
            application/json:
              schema:
                type: object
                properties:
                  is_healthy:
                    type: boolean
                    example: true
                required:
                  - is_healthy
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /health/clock:
    get:
      tags:
        - Health
      summary: Current backend time
      description: |
        This endpoint provides the current UNIX time. Your application might
        use this to verify if the client clock is not out of sync.
      responses:
        "200":
          description: Return the current UNIX time in milliseconds.
          content:
            application/json:
              schema:
                type: object
                properties:
                  server_time:
                    type: integer
                    format: int64
                    example: 1603400958947
                required:
                  - server_time
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /blocks/latest:
    get:
      tags:
        - Cardano » Blocks
      summary: Latest block
      description: |
        Return the latest block available to the backends, also known as the
        tip of the blockchain.
      responses:
        "200":
          description: Return the contents of the latest block.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/block_content"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /blocks/latest/txs:
    get:
      tags:
        - Cardano » Blocks
      summary: Latest block transactions
      description: Return the transactions within the latest block.
      parameters:
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            Ordered by tx index in the block.
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the transactions within the block.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/block_content_txs"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /blocks/{hash_or_number}:
    get:
      tags:
        - Cardano » Blocks
      summary: Specific block
      description: |
        Return the content of a requested block.
      parameters:
        - in: path
          name: hash_or_number
          required: true
          schema:
            type: string
            format: 64-character case-sensitive hexadecimal string or block number.
          description: Hash or number of the requested block.
          example: "4ea1ba291e8eef538635a53e59fddba7810d1679631cc3aed7c8e6c4091a516a"
      responses:
        "200":
          description: Return the contents of the block
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/block_content"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /blocks/slot/{slot_number}:
    get:
      tags:
        - Cardano » Blocks
      summary: Specific block in a slot
      description: |
        Return the content of a requested block for a specific slot.
      parameters:
        - in: path
          name: slot_number
          required: true
          schema:
            type: integer
            format: slot number
          description: Slot position for requested block.
          example: 30895909
      responses:
        "200":
          description: Return the contents of the block
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/block_content"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /blocks/epoch/{epoch_number}/slot/{slot_number}:
    get:
      tags:
        - Cardano » Blocks
      summary: Specific block in a slot in an epoch
      description: |
        Return the content of a requested block for a specific slot in an epoch.
      parameters:
        - in: path
          name: epoch_number
          required: true
          schema:
            type: integer
            format: slot number
          description: Epoch for specific epoch slot.
          example: 219
        - in: path
          name: slot_number
          required: true
          schema:
            type: integer
            format: slot number
          description: Slot position for requested block.
          example: 30895909
      responses:
        "200":
          description: Return the contents of the block
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/block_content"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /blocks/{hash_or_number}/next:
    get:
      tags:
        - Cardano » Blocks
      summary: Listing of next blocks
      description: |
        Return the list of blocks following a specific block.
      parameters:
        - in: path
          name: hash_or_number
          required: true
          schema:
            type: string
            format: 64-character case-sensitive hexadecimal string or block number.
          description: Hash of the requested block.
          example: "5ea1ba291e8eef538635a53e59fddba7810d1679631cc3aed7c8e6c4091a516a"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
      responses:
        "200":
          description: Return the contents of the block.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/block_content_array"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /blocks/{hash_or_number}/previous:
    get:
      tags:
        - Cardano » Blocks
      summary: Listing of previous blocks
      description: |
        Return the list of blocks preceding a specific block.
      parameters:
        - in: path
          name: hash_or_number
          required: true
          schema:
            type: string
            format: 64-character case-sensitive hexadecimal string or block number.
          description: Hash of the requested block
          example: "4873401"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
      responses:
        "200":
          description: Return the contents of the block
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/block_content_array"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /blocks/{hash_or_number}/txs:
    get:
      tags:
        - Cardano » Blocks
      summary: Block transactions
      description: Return the transactions within the block.
      parameters:
        - in: path
          name: hash_or_number
          required: true
          schema:
            type: string
            format: 64-character case-sensitive hexadecimal string or block number.
          description: Hash of the requested block.
          example: "4873401"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            Ordered by tx index in the block.
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the transactions within the block.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/block_content_txs"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /genesis:
    get:
      tags:
        - Cardano » Ledger
      summary: Blockchain genesis
      description: Return the information about blockchain genesis.
      responses:
        "200":
          description: Return the genesis parameters.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/genesis_content"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /epochs/latest:
    get:
      tags:
        - Cardano » Epochs
      summary: Latest epoch
      description: Return the information about the latest, therefore current, epoch.
      responses:
        "200":
          description: Return the data about the epoch
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/epoch_content"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /epochs/latest/parameters:
    get:
      tags:
        - Cardano » Epochs
      summary: Latest epoch protocol parameters
      description: Return the protocol parameters for the latest epoch.
      responses:
        "200":
          description: Return the data about the epoch
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/epoch_param_content"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /epochs/{number}:
    get:
      tags:
        - Cardano » Epochs
      summary: Specific epoch
      description: Return the content of the requested epoch.
      parameters:
        - in: path
          name: number
          required: true
          schema:
            type: integer
          description: Number of the epoch
          example: 225
      responses:
        "200":
          description: Return the epoch data.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/epoch_content"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /epochs/{number}/next:
    get:
      tags:
        - Cardano » Epochs
      summary: Listing of next epochs
      description: Return the list of epochs following a specific epoch.
      parameters:
        - in: path
          name: number
          required: true
          schema:
            type: integer
          description: Number of the requested epoch.
          example: 225
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
      responses:
        "200":
          description: Return the data about the epoch
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/epoch_content_array"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /epochs/{number}/previous:
    get:
      tags:
        - Cardano » Epochs
      summary: Listing of previous epochs
      description: Return the list of epochs preceding a specific epoch.
      parameters:
        - in: path
          name: number
          required: true
          schema:
            type: integer
          description: Number of the epoch
          example: 225
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results
      responses:
        "200":
          description: Return the epoch data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/epoch_content_array"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /epochs/{number}/stakes:
    get:
      tags:
        - Cardano » Epochs
      summary: Stake distribution
      description: Return the active stake distribution for the specified epoch.
      parameters:
        - in: path
          name: number
          required: true
          schema:
            type: integer
          description: Number of the epoch
          example: 225
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
      responses:
        "200":
          description: Return the data about the epoch
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/epoch_stake_content"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /epochs/{number}/stakes/{pool_id}:
    get:
      tags:
        - Cardano » Epochs
      summary: Stake distribution by pool
      description: Return the active stake distribution for the epoch specified by stake pool.
      parameters:
        - in: path
          name: number
          required: true
          schema:
            type: integer
          description: Number of the epoch
          example: 225
        - in: path
          required: true
          name: pool_id
          schema:
            type: string
          description: Stake pool ID to filter
          example: "pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
      responses:
        "200":
          description: Return the data about the epoch
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/epoch_stake_pool_content"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /epochs/{number}/blocks:
    get:
      tags:
        - Cardano » Epochs
      summary: Block distribution
      description: Return the blocks minted for the epoch specified.
      parameters:
        - in: path
          name: number
          required: true
          schema:
            type: integer
          description: Number of the epoch
          example: 225
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the data about the epoch
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/epoch_block_content"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /epochs/{number}/blocks/{pool_id}:
    get:
      tags:
        - Cardano » Epochs
      summary: Block distribution by pool
      description: Return the block minted for the epoch specified by stake pool.
      parameters:
        - in: path
          name: number
          required: true
          schema:
            type: integer
          description: Number of the epoch
          example: 225
        - in: path
          required: true
          name: pool_id
          schema:
            type: string
          description: Stake pool ID to filter
          example: "pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the data about the epoch
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/epoch_block_content"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /epochs/{number}/parameters:
    get:
      tags:
        - Cardano » Epochs
      summary: Protocol parameters
      description: Return the protocol parameters for the epoch specified.
      parameters:
        - in: path
          name: number
          required: true
          schema:
            type: integer
          description: Number of the epoch
          example: 225
      responses:
        "200":
          description: Return the data about the epoch
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/epoch_param_content"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /txs/{hash}:
    get:
      tags:
        - Cardano » Transactions
      summary: Specific transaction
      description: Return content of the requested transaction.
      parameters:
        - in: path
          name: hash
          required: true
          schema:
            type: string
            format: 64-character case-sensitive hexadecimal string.
          description: Hash of the requested transaction
          example: "6e5f825c42c1c6d6b77f2a14092f3b78c8f1b66db6f4cf8caec1555b6f967b3b"
      responses:
        "200":
          description: Return the contents of the transaction.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tx_content"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /txs/{hash}/utxos:
    get:
      tags:
        - Cardano » Transactions
      summary: Transaction UTXOs
      description: Return the inputs and UTXOs of the specific transaction.
      parameters:
        - in: path
          name: hash
          required: true
          schema:
            type: string
            format: 64-character case-sensitive hexadecimal string
          description: Hash of the requested transaction
          example: "6e5f825c82c1c6d6b77f2a14092f3b78c8f1b66db6f4cf8caec1555b6f967b3b"
      responses:
        "200":
          description: Return the contents of the transaction.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tx_content_utxo"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /txs/{hash}/stakes:
    get:
      tags:
        - Cardano » Transactions
      summary: Transaction stake addresses certificates
      description: |
        Obtain information about (de)registration of stake addresses within a transaction.
      parameters:
        - in: path
          name: hash
          required: true
          schema:
            type: string
            format: 64-character case-sensitive hexadecimal string.
          description: Hash of the requested transaction.
          example: "6e5f825c82c1c6d6b77f2a14092f3b78c8f1b66db6f4cf8caec1555b6f967b3b"
      responses:
        "200":
          description: |
            Obtain information about (de)registration of stake addresses within a transaction.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tx_content_stake_addr"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /txs/{hash}/delegations:
    get:
      tags:
        - Cardano » Transactions
      summary: Transaction delegation certificates
      description: |
        Obtain information about delegation certificates of a specific transaction.
      parameters:
        - in: path
          name: hash
          required: true
          schema:
            type: string
            format: 64-character case-sensitive hexadecimal string
          description: Hash of the requested transaction.
          example: "6e5f825c82c1c6d6b77f2a14092f3b78c8f1b66db6f4cf8caec1555b6f967b3b"
      responses:
        "200":
          description: Obtain information about delegation certificates of a specific transaction
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tx_content_delegations"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /txs/{hash}/withdrawals:
    get:
      tags:
        - Cardano » Transactions
      summary: Transaction withdrawal
      description: Obtain information about withdrawals of a specific transaction.
      parameters:
        - in: path
          name: hash
          required: true
          schema:
            type: string
            format: 64-character case-sensitive hexadecimal string
          description: Hash of the requested transaction.
          example: "6e5f825c82c1c6d6b77f2a14092f3b78c8f1b66db6f4cf8caec1555b6f967b3b"
      responses:
        "200":
          description: Obtain information about withdrawals of a specific transaction.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tx_content_withdrawals"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /txs/{hash}/mirs:
    get:
      tags:
        - Cardano » Transactions
      summary: Transaction MIRs
      description: Obtain information about Move Instantaneous Rewards (MIRs) of a specific transaction.
      parameters:
        - in: path
          name: hash
          required: true
          schema:
            type: string
            format: 64-character case-sensitive hexadecimal string
          description: Hash of the requested transaction.
          example: "6e5f825c82c1c6d6b77f2a14092f3b78c8f1b66db6f4cf8caec1555b6f967b3b"
      responses:
        "200":
          description: Obtain information about Move Instantaneous Rewards (MIRs) of a specific transaction.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tx_content_mirs"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /txs/{hash}/pool_updates:
    get:
      tags:
        - Cardano » Transactions
      summary: Transaction stake pool registration and update certificates
      description: |
        Obtain information about stake pool registration and update certificates of a specific transaction.
      parameters:
        - in: path
          name: hash
          required: true
          schema:
            type: string
            format: 64-character case-sensitive hexadecimal string
          description: Hash of the requested transaction
          example: "6e5f825c82c1c6d6b77f2a14092f3b78c8f1b66db6f4cf8caec1555b6f967b3b"
      responses:
        "200":
          description: Obtain information about stake pool certificates of a specific transaction
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tx_content_pool_certs"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /txs/{hash}/pool_retires:
    get:
      tags:
        - Cardano » Transactions
      summary: Transaction stake pool retirement certificates
      description: |
        Obtain information about stake pool retirements within a specific transaction.
      parameters:
        - in: path
          name: hash
          required: true
          schema:
            type: string
            format: 64-character case-sensitive hexadecimal string.
          description: Hash of the requested transaction
          example: "6e5f825c82c1c6d6b77f2a14092f3b78c8f1b66db6f4cf8caec1555b6f967b3b"
      responses:
        "200":
          description: |
            Obtain information about stake pool retirements within a specific transaction.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tx_content_pool_retires"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /txs/{hash}/metadata:
    get:
      tags:
        - Cardano » Transactions
      summary: Transaction metadata
      description: Obtain the transaction metadata.
      parameters:
        - in: path
          name: hash
          required: true
          schema:
            type: string
            format: 64-character case-sensitive hexadecimal string.
          description: Hash of the requested transaction
          example: "6e5f825c82c1c6d6b77f2a14092f3b78c8f1b66db6f4cf8caec1555b6f967b3b"
      responses:
        "200":
          description: Obtain information about stake pool retirements within a specific transaction.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tx_content_metadata"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /txs/{hash}/metadata/cbor:
    get:
      tags:
        - Cardano » Transactions
      summary: Transaction metadata in CBOR
      description: Obtain the transaction metadata in CBOR.
      parameters:
        - in: path
          name: hash
          required: true
          schema:
            type: string
            format: 64-character case-sensitive hexadecimal string.
          description: Hash of the requested transaction
          example: "6e5f825c82c1c6d6b77f2a14092f3b78c8f1b66db6f4cf8caec1555b6f967b3b"
      responses:
        "200":
          description: Obtain information about stake pool retirements within a specific transaction.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tx_content_metadata_cbor"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /txs/{hash}/redeemers:
    get:
      tags:
        - Cardano » Transactions
      summary: Transaction redeemers
      description: Obtain the transaction redeemers.
      parameters:
        - in: path
          name: hash
          required: true
          schema:
            type: string
            format: 64-character case-sensitive hexadecimal string.
          description: Hash of the requested transaction
          example: "6e5f825c82c1c6d6b77f2a14092f3b78c8f1b66db6f4cf8caec1555b6f967b3b"
      responses:
        "200":
          description: Obtain information about redeemers within a specific transaction.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tx_content_redeemers"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /tx/submit:
    post:
      tags:
        - Cardano » Transactions
      summary: Submit a transaction
      description: Submit an already serialized transaction to the network.
      parameters:
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            enum: ["application/cbor"]
      x-codeSamples:
        - lang: "Shell"
          label: "cURL"
          source: |
            # Assuming `data` is a serialized transaction on the file-system.
            curl "https://cardano-mainnet.blockfrost.io/api/v0/tx/submit" \
              -X POST \
              -H "Content-Type: application/cbor" \
              -H "project_id: $PROJECT_ID" \
              --data-binary @./data
        - lang: "Shell"
          label: "cardano-cli"
          source: |
            # Assuming `tx.signed` is signed transaction constructed by cardano-cli
            xxd -r -p <<< $(jq .cborHex tx.signed) > tx.submit-api.raw
            curl "https://cardano-mainnet.blockfrost.io/api/v0/tx/submit" \
              -X POST \
              -H "Content-Type: application/cbor" \
              -H "project_id: $PROJECT_ID" \
              --data-binary @./tx.submit-api.raw
      responses:
        "200":
          description: Return the ID of the submitted transaction.
          content:
            application/json:
              schema:
                type: string
                format: hex
                minLength: 64
                maxLength: 64
                example: "d1662b24fa9fe985fc2dce47455df399cb2e31e1e1819339e885801cc3578908"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /accounts/{stake_address}:
    get:
      tags:
        - Cardano » Accounts
      summary: Specific account address
      description: |
        Obtain information about a specific stake account.
      parameters:
        - in: path
          name: stake_address
          required: true
          schema:
            type: string
          description: Bech32 stake address.
          example: "stake1u9ylzsgxaa6xctf4juup682ar3juj85n8tx3hthnljg47zctvm3rc"
      responses:
        "200":
          description: Return the account content.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/account_content"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /accounts/{stake_address}/rewards:
    get:
      tags:
        - Cardano » Accounts
      summary: Account reward history
      description: |
        Obtain information about the reward history of a specific account.
      parameters:
        - in: path
          name: stake_address
          required: true
          schema:
            type: string
          description: Bech32 stake address.
          example: "stake1u9ylzsgxaa6xctf4juup682ar3juj85n8tx3hthnljg47zctvm3rc"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the account content.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/account_reward_content"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /accounts/{stake_address}/history:
    get:
      tags:
        - Cardano » Accounts
      summary: Account history
      description: |
        Obtain information about the history of a specific account.
      parameters:
        - in: path
          name: stake_address
          required: true
          schema:
            type: string
          description: Bech32 stake address.
          example: "stake1u9ylzsgxaa6xctf4juup682ar3juj85n8tx3hthnljg47zctvm3rc"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the account content.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/account_history_content"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /accounts/{stake_address}/delegations:
    get:
      tags:
        - Cardano » Accounts
      summary: Account delegation history
      description: Obtain information about the delegation of a specific account.
      parameters:
        - in: path
          name: stake_address
          required: true
          schema:
            type: string
          description: Bech32 stake address.
          example: "stake1u9ylzsgxaa6xctf4juup682ar3juj85n8tx3hthnljg47zctvm3rc"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the account delegations content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/account_delegation_content"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /accounts/{stake_address}/registrations:
    get:
      tags:
        - Cardano » Accounts
      summary: Account registration history
      description: |
        Obtain information about the registrations and deregistrations of a specific account.
      parameters:
        - in: path
          name: stake_address
          required: true
          schema:
            type: string
          description: Bech32 stake address.
          example: "stake1u9ylzsgxaa6xctf4juup682ar3juj85n8tx3hthnljg47zctvm3rc"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the account registration content.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/account_registration_content"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /accounts/{stake_address}/withdrawals:
    get:
      tags:
        - Cardano » Accounts
      summary: Account withdrawal history
      description: |
        Obtain information about the withdrawals of a specific account.
      parameters:
        - in: path
          name: stake_address
          required: true
          schema:
            type: string
          description: Bech32 stake address.
          example: "stake1u9ylzsgxaa6xctf4juup682ar3juj85n8tx3hthnljg47zctvm3rc"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the account withdrawal content.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/account_withdrawal_content"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /accounts/{stake_address}/mirs:
    get:
      tags:
        - Cardano » Accounts
      summary: Account MIR history
      description: |
        Obtain information about the MIRs of a specific account.
      parameters:
        - in: path
          name: stake_address
          required: true
          schema:
            type: string
          description: Bech32 stake address.
          example: "stake1u9ylzsgxaa6xctf4juup682ar3juj85n8tx3hthnljg47zctvm3rc"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the account MIR content.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/account_mir_content"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /accounts/{stake_address}/addresses:
    get:
      tags:
        - Cardano » Accounts
      summary: Account associated addresses
      description: Obtain information about the addresses of a specific account.
      parameters:
        - in: path
          name: stake_address
          required: true
          schema:
            type: string
          description: Bech32 stake address.
          example: "stake1u9ylzsgxaa6xctf4juup682ar3juj85n8tx3hthnljg47zctvm3rc"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the account addresses content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/account_addresses_content"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /accounts/{stake_address}/addresses/assets:
    get:
      tags:
        - Cardano » Accounts
      summary: Assets associated with the account addresses
      description: |
        Obtain information about assets associated with addresses of a specific account.

        <b>Be careful</b>, as an account could be part of a mangled address and does not necessarily mean the addresses are owned by user as the account.
      parameters:
        - in: path
          name: stake_address
          required: true
          schema:
            type: string
          description: Bech32 stake address.
          example: "stake1u9ylzsgxaa6xctf4juup682ar3juj85n8tx3hthnljg47zctvm3rc"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the account addresses content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/account_addresses_assets"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /metadata/txs/labels:
    get:
      tags:
        - Cardano » Metadata
      summary: Transaction metadata labels
      description: |
        List of all used transaction metadata labels.
      parameters:
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the account delegations content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tx_metadata_labels"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /metadata/txs/labels/{label}:
    get:
      tags:
        - Cardano » Metadata
      summary: Transaction metadata content in JSON
      description: Transaction metadata per label.
      parameters:
        - in: path
          name: label
          required: true
          schema:
            type: string
          description: Metadata label
          example: "1990"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the account delegations content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tx_metadata_label_json"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /metadata/txs/labels/{label}/cbor:
    get:
      tags:
        - Cardano » Metadata
      summary: Transaction metadata content in CBOR
      description: Transaction metadata per label.
      parameters:
        - in: path
          name: label
          required: true
          schema:
            type: string
          description: Metadata label
          example: "1990"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the account delegations content in CBOR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tx_metadata_label_cbor"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /addresses/{address}:
    get:
      tags:
        - Cardano » Addresses
      summary: Specific address
      description: Obtain information about a specific address.
      parameters:
        - in: path
          name: address
          required: true
          schema:
            type: string
          description: Bech32 address.
          example: "addr1qxqs59lphg8g6qndelq8xwqn60ag3aeyfcp33c2kdp46a09re5df3pzwwmyq946axfcejy5n4x0y99wqpgtp2gd0k09qsgy6pz"
      responses:
        "200":
          description: Return the address content.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/address_content"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /addresses/{address}/total:
    get:
      tags:
        - Cardano » Addresses
      summary: Address details
      description: Obtain details about an address.
      parameters:
        - in: path
          name: address
          required: true
          schema:
            type: string
          description: Bech32 address.
          example: "addr1qxqs59lphg8g6qndelq8xwqn60ag3aeyfcp33c2kdp46a09re5df3pzwwmyq946axfcejy5n4x0y99wqpgtp2gd0k09qsgy6pz"
      responses:
        "200":
          description: Return the Address details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/address_content_total"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /addresses/{address}/utxos:
    get:
      tags:
        - Cardano » Addresses
      summary: Address UTXOs
      description: UTXOs of the address.
      parameters:
        - in: path
          name: address
          required: true
          schema:
            type: string
          description: Bech32 address.
          example: "addr1qxqs59lphg8g6qndelq8xwqn60ag3aeyfcp33c2kdp46a09re5df3pzwwmyq946axfcejy5n4x0y99wqpgtp2gd0k09qsgy6pz"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            Ordered by tx index in the block.
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the address content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/address_utxo_content"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /addresses/{address}/txs:
    get:
      deprecated: true
      tags:
        - Cardano » Addresses
      summary: Address transactions
      description: Transactions on the address.
      parameters:
        - in: path
          name: address
          required: true
          schema:
            type: string
          description: Bech32 address.
          example: "addr1qxqs59lphg8g6qndelq8xwqn60ag3aeyfcp33c2kdp46a09re5df3pzwwmyq946axfcejy5n4x0y99wqpgtp2gd0k09qsgy6pz"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of transactions per page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the address content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/address_txs_content"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /addresses/{address}/transactions:
    get:
      tags:
        - Cardano » Addresses
      summary: Address transactions
      description: Transactions on the address.
      parameters:
        - in: path
          name: address
          required: true
          schema:
            type: string
          description: Bech32 address.
          example: "addr1qxqs59lphg8g6qndelq8xwqn60ag3aeyfcp33c2kdp46a09re5df3pzwwmyq946axfcejy5n4x0y99wqpgtp2gd0k09qsgy6pz"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The numbers of pools per page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
        - in: query
          name: from
          required: false
          schema:
            type: string
          description: |
            The block number and optionally also index from which (inclusive) to start search for results, concatenated using colon.
            Has to be lower than or equal to `to` parameter.
          example: "8929261"
        - in: query
          name: to
          required: false
          schema:
            type: string
          description: |
            The block number and optionally also index where (inclusive) to end the search for results, concatenated using colon.
            Has to be higher than or equal to `from` parameter.
          example: "9999269:10"
      responses:
        "200":
          description: Return the address content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/address_transactions_content"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /pools:
    get:
      tags:
        - Cardano » Pools
      summary: List of stake pools
      description: List of registered stake pools.
      parameters:
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The numbers of pools per page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the list of pools.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pool_list"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /pools/retired:
    get:
      tags:
        - Cardano » Pools
      summary: List of retired stake pools
      description: List of already retired pools.
      parameters:
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The numbers of pools per page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the pool information content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pool_list_retire"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /pools/retiring:
    get:
      tags:
        - Cardano » Pools
      summary: List of retiring stake pools
      description: List of stake pools retiring in the upcoming epochs
      parameters:
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the pool information content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pool_list_retire"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /pools/{pool_id}:
    get:
      tags:
        - Cardano » Pools
      summary: Specific stake pool
      description: Pool information.
      parameters:
        - in: path
          name: pool_id
          required: true
          schema:
            type: string
          description: Bech32 or hexadecimal pool ID.
          example: "pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy"
      responses:
        "200":
          description: Return the pool information content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pool"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /pools/{pool_id}/history:
    get:
      tags:
        - Cardano » Pools
      summary: Stake pool history
      description: |
        History of stake pool parameters over epochs.
      parameters:
        - in: path
          name: pool_id
          required: true
          schema:
            type: string
          description: Bech32 or hexadecimal pool ID.
          example: "pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the pool information content.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pool_history"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /pools/{pool_id}/metadata:
    get:
      tags:
        - Cardano » Pools
      summary: Stake pool metadata
      description: |
        Stake pool registration metadata.
      parameters:
        - in: path
          name: pool_id
          required: true
          schema:
            type: string
          description: Bech32 or hexadecimal pool ID.
          example: "pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy"
      responses:
        "200":
          description: Return the pool metadata content.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/pool_metadata"
                  - $ref: "#/components/schemas/empty_object"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /pools/{pool_id}/relays:
    get:
      tags:
        - Cardano » Pools
      summary: Stake pool relays
      description: Relays of a stake pool.
      parameters:
        - in: path
          name: pool_id
          required: true
          schema:
            type: string
          description: Bech32 or hexadecimal pool ID.
          example: "pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy"
      responses:
        "200":
          description: Return the pool relays information content.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pool_relays"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /pools/{pool_id}/delegators:
    get:
      tags:
        - Cardano » Pools
      summary: Stake pool delegators
      description: List of current stake pools delegators.
      parameters:
        - in: path
          name: pool_id
          required: true
          schema:
            type: string
          description: Bech32 or hexadecimal pool ID.
          example: "pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the pool delegations.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pool_delegators"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /pools/{pool_id}/blocks:
    get:
      tags:
        - Cardano » Pools
      summary: Stake pool blocks
      description: List of stake pools blocks.
      parameters:
        - in: path
          name: pool_id
          required: true
          schema:
            type: string
          description: Bech32 or hexadecimal pool ID.
          example: "pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the pool block list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pool_blocks"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /pools/{pool_id}/updates:
    get:
      tags:
        - Cardano » Pools
      summary: Stake pool updates
      description: List of certificate updates to the stake pool.
      parameters:
        - in: path
          name: pool_id
          required: true
          schema:
            type: string
          description: Bech32 or hexadecimal pool ID.
          example: "pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the pool updates history
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pool_updates"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /assets:
    get:
      tags:
        - Cardano » Assets
      summary: Assets
      description: List of assets.
      parameters:
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return list of assets
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/assets"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /assets/{asset}:
    get:
      tags:
        - Cardano » Assets
      summary: Specific asset
      description: Information about a specific asset
      parameters:
        - in: path
          name: asset
          required: true
          schema:
            type: string
          description: Concatenation of the policy_id and hex-encoded asset_name
          example: "b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e"
      responses:
        "200":
          description: Return the information about a specific asset
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/asset"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /assets/{asset}/history:
    get:
      tags:
        - Cardano » Assets
      summary: Asset history
      description: History of a specific asset
      parameters:
        - in: path
          name: asset
          required: true
          schema:
            type: string
          description: Concatenation of the policy_id and hex-encoded asset_name
          example: "b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the information about the history of a specific asset
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/asset_history"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /assets/{asset}/txs:
    get:
      deprecated: true
      tags:
        - Cardano » Assets
      summary: Asset transactions
      description: List of a specific asset transactions
      parameters:
        - in: path
          name: asset
          required: true
          schema:
            type: string
          description: Concatenation of the policy_id and hex-encoded asset_name
          example: "b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the information about the history of a specific asset
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/asset_txs"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /assets/{asset}/transactions:
    get:
      tags:
        - Cardano » Assets
      summary: Asset transactions
      description: List of a specific asset transactions
      parameters:
        - in: path
          name: asset
          required: true
          schema:
            type: string
          description: Concatenation of the policy_id and hex-encoded asset_name
          example: "b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the information about the history of a specific asset
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/asset_transactions"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /assets/{asset}/addresses:
    get:
      tags:
        - Cardano » Assets
      summary: Asset addresses
      description: List of a addresses containing a specific asset
      parameters:
        - in: path
          name: asset
          required: true
          schema:
            type: string
          description: Concatenation of the policy_id and hex-encoded asset_name
          example: "b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the information about the history of a specific asset
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/asset_addresses"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /assets/policy/{policy_id}:
    get:
      tags:
        - Cardano » Assets
      summary: Assets of a specific policy
      description: List of asset minted under a specific policy
      parameters:
        - in: path
          name: policy_id
          required: true
          schema:
            type: string
          description: Specific policy_id
          example: "476039a0949cf0b22f6a800f56780184c44533887ca6e821007840c3"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the information about a specific asset
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/asset_policy"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /scripts:
    get:
      tags:
        - Cardano » Scripts
      summary: Scripts
      description: List of scripts.
      parameters:
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return list of scripts
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/scripts"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /scripts/{script_hash}:
    get:
      tags:
        - Cardano » Scripts
      summary: Specific script
      description: Information about a specific script
      parameters:
        - in: path
          name: script_hash
          required: true
          schema:
            type: string
          description: Hash of the script
          example: "e1457a0c47dfb7a2f6b8fbb059bdceab163c05d34f195b87b9f2b30e"
      responses:
        "200":
          description: Return the information about a specific script
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/script"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /scripts/{script_hash}/redeemers:
    get:
      tags:
        - Cardano » Scripts
      summary: Redeemers of a specific script
      description: List of redeemers of a specific script
      parameters:
        - in: path
          name: script_hash
          required: true
          schema:
            type: string
          description: Hash of the script
          example: "e1457a0c47dfb7a2f6b8fbb059bdceab163c05d34f195b87b9f2b30e"
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the information about redeemers of a specific script
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/script_redeemers"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /ipfs/add:
    servers:
      - url: https://ipfs.blockfrost.io/api/v0
    post:
      tags:
        - IPFS » Add
      summary: Add a file to IPFS
      description: |
        You need to `/ipfs/pin/add` an object to avoid it being garbage collected. This usage
        is being counted in your user account quota.
      x-codeSamples:
        - lang: "curl"
          source: |
            curl "https://ipfs.blockfrost.io/api/v0/ipfs/add" \
              -X POST \
              -H "project_id: $PROJECT_ID" \
              -F "file=@./README.md"
      responses:
        "200":
          description: Returns information about added IPFS object
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: "README.md"
                    description: Name of the file
                  ipfs_hash:
                    type: string
                    example: QmZbHqiCxKEVX7QfijzJTkZiSi3WEVTcvANgNAWzDYgZDr
                    description: IPFS hash of the file
                  size:
                    type: string
                    example: "125297"
                    description: IPFS node size in Bytes
                required:
                  - name
                  - ipfs_hash
                  - size
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /ipfs/gateway/{IPFS_path}:
    servers:
      - url: https://ipfs.blockfrost.io/api/v0
    get:
      tags:
        - IPFS » Gateway
      summary: Relay to an IPFS gateway
      description: Retrieve an object from the IFPS gateway (useful if you do not want to rely on a public gateway, such as `ipfs.blockfrost.dev`).
      parameters:
        - in: path
          required: true
          name: IPFS_path
          schema:
            type: string
            description: Path to the IPFS object
      responses:
        "200":
          description: Returns the object content
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /ipfs/pin/add/{IPFS_path}:
    servers:
      - url: https://ipfs.blockfrost.io/api/v0
    post:
      tags:
        - IPFS » Pins
      summary: Pin an object
      description: Pinned objects are counted in your user storage quota.
      parameters:
        - in: path
          required: true
          name: IPFS_path
          schema:
            type: string
            description: Path to the IPFS object
      responses:
        "200":
          description: Returns pinned object
          content:
            application/json:
              schema:
                type: object
                properties:
                  ipfs_hash:
                    type: string
                    example: "QmPojRfAXYAXV92Dof7gtSgaVuxEk64xx9CKvprqu9VwA8"
                    description: IPFS hash of the pinned object
                  state:
                    type: string
                    enum: [queued|pinned|unpinned|failed|gc]
                    example: "queued"
                    description: State of the pin action
                required:
                  - ipfs_hash
                  - state
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /ipfs/pin/list/:
    servers:
      - url: https://ipfs.blockfrost.io/api/v0
    get:
      tags:
        - IPFS » Pins
      summary: List pinned objects
      description: List objects pinned to local storage
      parameters:
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Returns pinned objects
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    time_created:
                      type: integer
                      description: Creation time of the IPFS object on our backends
                      example: 1615551024
                    time_pinned:
                      type: integer
                      description: Pin time of the IPFS object on our backends
                      example: 1615551024
                    ipfs_hash:
                      type: string
                      description: IPFS hash of the pinned object
                      example: "QmdVMnULrY95mth2XkwjxDtMHvzuzmvUPTotKE1tgqKbCx"
                    size:
                      type: string
                      description: Size of the object in Bytes
                      example: "1615551024"
                    state:
                      type: string
                      enum: [queued|pinned|unpinned|failed|gc]
                      description: |
                        State of the pinned object, which is `queued` when we are retriving object. If this
                        is successful the state is changed to `pinned` or `failed` if not. The state `gc` means the
                        pinned item has been garbage collected due to account being over storage quota or after it has
                        been moved to `unpinned` state by removing the object pin.
                      example: "pinned"
                  required:
                    - time_created
                    - time_pinned
                    - ipfs_hash
                    - size
                    - state
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /ipfs/pin/list/{IPFS_path}:
    servers:
      - url: https://ipfs.blockfrost.io/api/v0
    get:
      tags:
        - IPFS » Pins
      summary: Get details about pinned object
      description: Get information about locally pinned IPFS object
      parameters:
        - in: path
          required: true
          name: IPFS_path
          schema:
            type: string
            description: The path to the IPFS object
      responses:
        "200":
          description: Returns the pins pinned
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_created:
                    type: integer
                    description: Time of the creation of the IPFS object on our backends
                    example: 1615551024
                  time_pinned:
                    type: integer
                    description: Time of the pin of the IPFS object on our backends
                    example: 1615551024
                  ipfs_hash:
                    type: string
                    description: IPFS hash of the pinned object
                    example: "QmdVMnULrY95mth2XkwjxDtMHvzuzmvUPTotKE1tgqKbCx"
                  size:
                    type: string
                    description: Size of the object in Bytes
                    example: "1615551024"
                  state:
                    type: string
                    enum: [queued|pinned|unpinned|failed|gc]
                    description: |
                      State of the pinned object. We define 5 states: `queued`, `pinned`, `unpinned`, `failed`, `gc`.
                      When the object is pending retrieval (i.e. after `/ipfs/pin/add/{IPFS_path}`), the state is `queued`.
                      If the object is already successfully retrieved, state is changed to `pinned` or `failed` otherwise.
                      When object is unpinned (i.e. after `/ipfs/pin/remove/{IPFS_path}`) it is marked for garbage collection.
                      State `gc` means that a previously `unpinned` item has been garbage collected due to account being over storage quota.
                    example: "pinned"
                required:
                  - time_created
                  - time_pinned
                  - ipfs_hash
                  - size
                  - state
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /ipfs/pin/remove/{IPFS_path}:
    servers:
      - url: https://ipfs.blockfrost.io/api/v0
    post:
      tags:
        - IPFS » Pins
      description: Remove pinned objects from local storage
      parameters:
        - in: path
          required: true
          name: IPFS_path
          schema:
            type: string
            description: The path to the IPFS object
      responses:
        "200":
          description: Returns the pins removed
          content:
            application/json:
              schema:
                type: object
                properties:
                  ipfs_hash:
                    type: string
                    example: "QmPojRfAXYAXV92Dof7gtSgaVuxEk64xx9CKvprqu9VwA8"
                    description: IPFS hash of the pinned object
                  state:
                    type: string
                    enum: [queued|pinned|unpinned|failed|gc]
                    example: "unpinned"
                    description: State of the pin action
                required:
                  - ipfs_hash
                  - state
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /metrics/:
    get:
      tags:
        - Metrics
      summary: Blockfrost usage metrics
      description: History of your Blockfrost usage metrics in the past 30 days.
      responses:
        "200":
          description: Return the last 30 days of metrics
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/metrics"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /metrics/endpoints:
    get:
      tags:
        - Metrics
      summary: Blockfrost endpoint usage metrics
      description: |
        History of your Blockfrost usage metrics per endpoint in the past 30 days.
      responses:
        "200":
          description: Return the last 30 days of metrics
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/metrics_endpoints"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /network:
    get:
      tags:
        - Cardano » Network
      summary: Network information
      description: Return detailed network information.
      responses:
        "200":
          description: Return detailed network information.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/network"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /nutlink/{address}:
    get:
      tags:
        - Nut.link
      description: List metadata about specific address
      parameters:
        - in: path
          required: true
          name: address
          schema:
            type: string
            description: Address of a metadata oracle
      responses:
        "200":
          description: Return the metadata about metadata oracle
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/nutlink_address"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /nutlink/{address}/tickers:
    get:
      tags:
        - Nut.link
      description: List tickers for a specific metadata oracle
      parameters:
        - in: path
          required: true
          name: address
          schema:
            type: string
            description: Address of a metadata oracle
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the tickers provided by the metadata oracle
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/nutlink_address_tickers"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

  /nutlink/{address}/tickers/{ticker}:
    get:
      tags:
        - Nut.link
      description: List of records of a specific ticker
      parameters:
        - in: path
          required: true
          name: address
          schema:
            type: string
            description: Address of a metadata oracle
        - in: path
          required: true
          name: ticker
          schema:
            type: string
            description: Ticker for the pool record
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the tickers provided by the metadata oracle
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/nutlink_address_ticker"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"
  /nutlink/tickers/{ticker}:
    get:
      tags:
        - Nut.link
      description: List of records of a specific ticker
      parameters:
        - in: path
          required: true
          name: ticker
          schema:
            type: string
            description: Ticker for the pool record
        - in: query
          name: count
          required: false
          schema:
            type: integer
            maximum: 100
            default: 100
          description: The number of results displayed on one page.
        - in: query
          name: page
          required: false
          schema:
            type: integer
            default: 1
          description: The page number for listing the results.
        - in: query
          name: order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: |
            The ordering of items from the point of view of the blockchain,
            not the page listing itself. By default, we return oldest first, newest last.
      responses:
        "200":
          description: Return the tickers provided by the metadata oracle
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/nutlink_tickers_ticker"
        "400":
          $ref: "#/components/responses/bad_request"
        "403":
          $ref: "#/components/responses/unauthorized_error"
        "404":
          $ref: "#/components/responses/not_found"
        "429":
          $ref: "#/components/responses/overusage_limit"
        "418":
          $ref: "#/components/responses/autobanned"
        "500":
          $ref: "#/components/responses/internal_server_error"

components:
  responses:
    overusage_limit:
      description: Usage limit reached
      content:
        application/json:
          schema:
            type: object
            properties:
              status_code:
                type: integer
                example: 429
              error:
                type: string
                example: "Project Over Limit"
              message:
                type: string
                example: "Usage is over limit."
            required:
              - status_code
              - error
              - message

    autobanned:
      description: IP has been auto-banned for extensive sending of requests after usage limit has been reached
      content:
        application/json:
          schema:
            type: object
            properties:
              status_code:
                type: integer
                example: 418
              error:
                type: string
                example: "Requested Banned"
              message:
                type: string
                example: "IP has been auto-banned for flooding."
            required:
              - status_code
              - error
              - message

    not_found:
      description: Component not found
      content:
        application/json:
          schema:
            type: object
            properties:
              status_code:
                type: integer
                example: 404
              error:
                type: string
                example: "Not Found"
              message:
                type: string
                example: "The requested component has not been found."
            required:
              - status_code
              - error
              - message

    internal_server_error:
      description: Internal Server Error
      content:
        application/json:
          schema:
            type: object
            properties:
              status_code:
                type: integer
                example: 500
              error:
                type: string
                example: "Internal Server Error"
              message:
                type: string
                example: "An unexpected response was received from the backend."
            required:
              - status_code
              - error
              - message

    unauthorized_error:
      description: Authentication secret is missing or invalid
      content:
        application/json:
          schema:
            type: object
            properties:
              status_code:
                type: integer
                example: 403
              error:
                type: string
                example: "Forbidden"
              message:
                type: string
                example: "Invalid project token."
            required:
              - status_code
              - error
              - message

    bad_request:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              status_code:
                type: integer
                example: 400
              error:
                type: string
                example: "Bad Request"
              message:
                type: string
                example: "Backend did not understand your request."
            required:
              - status_code
              - error
              - message

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: project_id
      description: |
        There are multiple token types available based on network you choose
        when creating a Blockfrost a project, for a list of token types
        see [Available networks](#section/Available-networks)

  schemas:
    block_content_array:
      type: array
      items:
        $ref: "#/components/schemas/block_content"
    block_content:
      type: object
      properties:
        time:
          type: integer
          example: 1641338934
          description: Block creation time in UNIX time
        height:
          type: integer
          nullable: true
          example: 15243593
          description: Block number
        hash:
          type: string
          example: "4ea1ba291e8eef538635a53e59fddba7810d1679631cc3aed7c8e6c4091a516a"
          description: Hash of the block
        slot:
          type: integer
          nullable: true
          example: 412162133
          description: Slot number
        epoch:
          type: integer
          nullable: true
          example: 425
          description: Epoch number
        epoch_slot:
          type: integer
          nullable: true
          example: 12
          description: Slot within the epoch
        slot_leader:
          type: string
          example: "pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2qnikdy"
          description: Bech32 ID of the slot leader or specific block description in case there is no slot leader
        size:
          type: integer
          example: 3
          description: Block size in Bytes
        tx_count:
          type: integer
          example: 1
          description: Number of transactions in the block
        output:
          type: string
          nullable: true
          example: "128314491794"
          description: Total output within the block in Lovelaces
        fees:
          type: string
          nullable: true
          example: "592661"
          description: Total fees within the block in Lovelaces
        block_vrf:
          type: string
          nullable: true
          example: "vrf_vk1wf2k6lhujezqcfe00l6zetxpnmh9n6mwhpmhm0dvfh3fxgmdnrfqkms8ty"
          description: VRF key of the block
          minLength: 65
          maxLength: 65
        previous_block:
          type: string
          nullable: true
          example: "43ebccb3ac72c7cebd0d9b755a4b08412c9f5dcb81b8a0ad1e3c197d29d47b05"
          description: Hash of the previous block
        next_block:
          type: string
          nullable: true
          example: "8367f026cf4b03e116ff8ee5daf149b55ba5a6ec6dec04803b8dc317721d15fa"
          description: Hash of the next block
        confirmations:
          type: integer
          example: 4698
          description: Number of block confirmations
      required:
        - time
        - height
        - hash
        - slot
        - epoch
        - epoch_slot
        - slot_leader
        - size
        - tx_count
        - output
        - fees
        - block_vrf
        - previous_block
        - next_block
        - confirmations
    block_content_txs:
      type: array
      items:
        type: string
        description: Hash of the transaction
      example:
        - "8788591983aa73981fc92d6cddbbe643959f5a784e84b8bee0db15823f575a5b"
        - "4eef6bb7755d8afbeac526b799f3e32a624691d166657e9d862aaeb66682c036"
        - "52e748c4dec58b687b90b0b40d383b9fe1f24c1a833b7395cdf07dd67859f46f"
        - "e8073fd5318ff43eca18a852527166aa8008bee9ee9e891f585612b7e4ba700b"
    genesis_content:
      type: object
      properties:
        active_slots_coefficient:
          type: number
          example: 0.05
          description: The proportion of slots in which blocks should be issued
        update_quorum:
          type: integer
          example: 5
          description: Determines the quorum needed for votes on the protocol parameter updates
        max_lovelace_supply:
          type: string
          example: "45000000000000000"
          description: The total number of lovelace in the system
        network_magic:
          type: integer
          example: 764824073
          description: Network identifier
        epoch_length:
          type: integer
          example: 432000
          description: Number of slots in an epoch
        system_start:
          type: integer
          example: 1506203091
          description: Time of slot 0 in UNIX time
        slots_per_kes_period:
          type: integer
          example: 129600
          description: Number of slots in an KES period
        slot_length:
          type: integer
          example: 1
          description: Duration of one slot in seconds
        max_kes_evolutions:
          type: integer
          example: 62
          description: The maximum number of time a KES key can be evolved before a pool operator must create a new operational certificate
        security_param:
          type: integer
          example: 2160
          description: Security parameter k
      required:
        - active_slots_coefficient
        - update_quorum
        - max_lovelace_supply
        - network_magic
        - epoch_length
        - system_start
        - slots_per_kes_period
        - slot_length
        - max_kes_evolutions
        - security_param
    epoch_content_array:
      type: array
      items:
        $ref: "#/components/schemas/epoch_content"
    epoch_content:
      type: object
      properties:
        epoch:
          type: integer
          example: 225
          description: Epoch number
        start_time:
          type: integer
          example: 1603403091
          description: Unix time of the start of the epoch
        end_time:
          type: integer
          example: 1603835086
          description: Unix time of the end of the epoch
        first_block_time:
          type: integer
          example: 1603403092
          description: Unix time of the first block of the epoch
        last_block_time:
          type: integer
          example: 1603835084
          description: Unix time of the last block of the epoch
        block_count:
          type: integer
          example: 21298
          description: Number of blocks within the epoch
        tx_count:
          type: integer
          example: 17856
          description: Number of transactions within the epoch
        output:
          type: string
          example: "7849943934049314"
          description: Sum of all the transactions within the epoch in Lovelaces
        fees:
          type: string
          example: "4203312194"
          description: Sum of all the fees within the epoch in Lovelaces
        active_stake:
          nullable: true
          type: string
          example: "784953934049314"
          description: Sum of all the active stakes within the epoch in Lovelaces
      required:
        - epoch
        - start_time
        - end_time
        - first_block_time
        - last_block_time
        - block_count
        - tx_count
        - output
        - fees
        - active_stake
    epoch_stake_content:
      type: array
      items:
        properties:
          stake_address:
            type: string
            example: "stake1u9l5q5jwgelgagzyt6nuaasefgmn8pd25c8e9qpeprq0tdcp0e3uk"
            description: Stake address
          pool_id:
            type: string
            example: "pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy"
            description: Bech32 prefix of the pool delegated to
          amount:
            type: string
            example: "4440295078"
            description: Amount of active delegated stake in Lovelaces
        required:
          - stake_address
          - pool_id
          - amount
    epoch_stake_pool_content:
      type: array
      items:
        properties:
          stake_address:
            type: string
            example: "stake1u9l5q5jwgelgagzyt6nuaasefgmn8pd25c8e9qpeprq0tdcp0e3uk"
            description: Stake address
          amount:
            type: string
            example: "4440295078"
            description: Amount of active delegated stake in Lovelaces
        required:
          - stake_address
          - amount
    epoch_block_content:
      type: array
      items:
        type: string
        description: Hash of the block
      example:
        - "d0fa315687e99ccdc96b14cc2ea74a767405d64427b648c470731a9b69e4606e"
        - "38bc6efb92a830a0ed22a64f979d120d26483fd3c811f6622a8c62175f530878"
        - "f3258fcd8b975c061b4fcdcfcbb438807134d6961ec278c200151274893b6b7d"
    epoch_param_content:
      type: object
      properties:
        epoch:
          type: integer
          example: 225
          description: Epoch number
        min_fee_a:
          type: integer
          example: 44
          description: The linear factor for the minimum fee calculation for given epoch
        min_fee_b:
          type: integer
          example: 155381
          description: The constant factor for the minimum fee calculation
        max_block_size:
          type: integer
          example: 65536
          description: Maximum block body size in Bytes
        max_tx_size:
          type: integer
          example: 16384
          description: Maximum transaction size
        max_block_header_size:
          type: integer
          example: 1100
          description: Maximum block header size
        key_deposit:
          type: string
          example: "2000000"
          description: The amount of a key registration deposit in Lovelaces
        pool_deposit:
          type: string
          example: "500000000"
          description: The amount of a pool registration deposit in Lovelaces
        e_max:
          type: integer
          example: 18
          description: Epoch bound on pool retirement
        n_opt:
          type: integer
          example: 150
          description: Desired number of pools
        a0:
          type: number
          example: 0.3
          description: Pool pledge influence
        rho:
          type: number
          example: 0.003
          description: Monetary expansion
        tau:
          type: number
          example: 0.2
          description: Treasury expansion
        decentralisation_param:
          type: number
          example: 0.5
          description: Percentage of blocks produced by federated nodes
        extra_entropy:
          type: object
          nullable: true
          example: null
          description: Seed for extra entropy
        protocol_major_ver:
          type: integer
          example: 2
          description: Accepted protocol major version
        protocol_minor_ver:
          type: integer
          example: 0
          description: Accepted protocol minor version
        min_utxo:
          type: "string"
          example: "1000000"
          description: Minimum UTXO value
        min_pool_cost:
          type: string
          example: "340000000"
          description: Minimum stake cost forced on the pool
        nonce:
          type: string
          example: "1a3be38bcbb7911969283716ad7aa550250226b76a61fc51cc9a9a35d9276d81"
          description: Epoch number only used once
        # cost_models:
        # https://github.com/input-output-hk/cardano-db-sync/pull/758
        price_mem:
          nullable: true
          type: number
          example: 0.001
          description: The per word cost of script memory usage
        price_step:
          nullable: true
          type: number
          example: 0.01
          description: The cost of script execution step usage
        max_tx_ex_mem:
          nullable: true
          type: string
          example: "11000000000"
          description: The maximum number of execution memory allowed to be used in a single transaction
        max_tx_ex_steps:
          nullable: true
          type: string
          example: "11000000000"
          description: The maximum number of execution steps allowed to be used in a single transaction
        max_block_ex_mem:
          nullable: true
          type: string
          example: "110000000000"
          description: The maximum number of execution memory allowed to be used in a single block
        max_block_ex_steps:
          nullable: true
          type: string
          example: "110000000000"
          description: The maximum number of execution steps allowed to be used in a single block
        max_val_size:
          nullable: true
          type: string
          example: "5000"
          description: The maximum Val size
        collateral_percent:
          nullable: true
          type: number
          example: 1.5
          description: The percentage of the transactions fee which must be provided as collateral when including non-native scripts
        max_collateral_inputs:
          nullable: true
          type: integer
          example: 6
          description: The maximum number of collateral inputs allowed in a transaction
        coins_per_utxo_word:
          nullable: true
          type: string
          example: "34482"
          description: The cost per UTxO word
      required:
        - epoch
        - min_fee_a
        - min_fee_b
        - max_block_size
        - max_tx_size
        - max_block_header_size
        - key_deposit
        - pool_deposit
        - e_max
        - n_opt
        - a0
        - rho
        - tau
        - decentralisation_param
        - extra_entropy
        - protocol_major_ver
        - protocol_minor_ver
        - min_utxo
        - min_pool_cost
        - nonce
        - price_mem
        - price_step
        - max_tx_ex_mem
        - max_tx_ex_steps
        - max_block_ex_mem
        - max_block_ex_steps
        - max_val_size
        - collateral_percent
        - max_collateral_inputs
        - coins_per_utxo_word
    tx_content:
      type: object
      properties:
        hash:
          type: string
          example: "1e043f100dce12d107f679685acd2fc0610e10f72a92d412794c9773d11d8477"
          description: Transaction hash
        block:
          type: string
          example: "356b7d7dbb696ccd12775c016941057a9dc70898d87a63fc752271bb46856940"
          description: Block hash
        block_height:
          type: integer
          example: 123456
          description: Block number
        slot:
          type: integer
          example: 42000000
          description: Slot number
        index:
          type: integer
          example: 1
          description: Transaction index within the block
        output_amount:
          type: array
          items:
            type: object
            description: The sum of all the UTXO per asset
            properties:
              unit:
                type: string
                format: Lovelace or concatenation of asset policy_id and hex-encoded asset_name
                description: The unit of the value
              quantity:
                type: string
                description: The quantity of the unit
            required:
              - unit
              - quantity
          example:
            - unit: "lovelace"
              quantity: "42000000"
            - unit: "b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e"
              quantity: "12"
        fees:
          type: string
          example: "182485"
          description: Fees of the transaction in Lovelaces
        deposit:
          type: string
          example: "0"
          description: Deposit within the transaction in Lovelaces
        size:
          type: integer
          example: 433
          description: Size of the transaction in Bytes
        invalid_before:
          type: string
          nullable: true
          example: null
          description: Left (included) endpoint of the timelock validity intervals
        invalid_hereafter:
          type: string
          nullable: true
          example: "13885913"
          description: Right (excluded) endpoint of the timelock validity intervals
        utxo_count:
          type: integer
          example: 4
          description: Count of UTXOs within the transaction
        withdrawal_count:
          type: integer
          example: 0
          description: Count of the withdrawals within the transaction
        mir_cert_count:
          type: integer
          example: 0
          description: Count of the MIR certificates within the transaction
        delegation_count:
          type: integer
          example: 0
          description: Count of the delegations within the transaction
        stake_cert_count:
          type: integer
          example: 0
          description: Count of the stake keys (de)registration and delegation certificates within the transaction
        pool_update_count:
          type: integer
          example: 0
          description: Count of the stake pool registration and update certificates within the transaction
        pool_retire_count:
          type: integer
          example: 0
          description: Count of the stake pool retirement certificates within the transaction
        asset_mint_or_burn_count:
          type: integer
          example: 0
          description: Count of asset mints and burns within the transaction
        redeemer_count:
          type: integer
          example: 0
          description: Count of redeemers within the transaction
      required:
        - hash
        - block
        - block_height
        - slot
        - index
        - output_amount
        - fees
        - deposit
        - size
        - invalid_before
        - invalid_hereafter
        - utxo_count
        - withdrawal_count
        - mir_cert_count
        - delegation_count
        - stake_cert_count
        - pool_update_count
        - pool_retire_count
        - asset_mint_or_burn_count
        - redeemer_count
    tx_content_utxo:
      type: object
      properties:
        hash:
          type: string
          example: "1e043f100dce12d107f679685acd2fc0610e10f72a92d412794c9773d11d8477"
          description: Transaction hash
        inputs:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
                example: "addr1q9ld26v2lv8wvrxxmvg90pn8n8n5k6tdst06q2s856rwmvnueldzuuqmnsye359fqrk8hwvenjnqultn7djtrlft7jnq7dy7wv"
                description: Input address
              amount:
                type: array
                items:
                  type: object
                  description: The sum of all the UTXO per asset
                  properties:
                    unit:
                      type: string
                      format: Lovelace or concatenation of asset policy_id and hex-encoded asset_name
                      description: The unit of the value
                    quantity:
                      type: string
                      description: The quantity of the unit
                  required:
                    - unit
                    - quantity
                example:
                  - unit: "lovelace"
                    quantity: "42000000"
                  - unit: "b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e"
                    quantity: "12"
              tx_hash:
                type: string
                example: "1a0570af966fb355a7160e4f82d5a80b8681b7955f5d44bec0dce628516157f0"
                description: Hash of the UTXO transaction
              output_index:
                type: number
                example: 0
                description: UTXO index in the transaction
              data_hash:
                type: string
                description: The hash of the transaction output datum
                nullable: true
              collateral:
                type: boolean
                example: false
                description: Whether the input is a collateral consumed on script validation failure
            required:
              - address
              - amount
              - tx_hash
              - output_index
              - data_hash
              - collateral
        outputs:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
                example: "addr1q9ld26v2lv8wvrxxmvg90pn8n8n5k6tdst06q2s856rwmvnueldzuuqmnsye359fqrk8hwvenjnqultn7djtrlft7jnq7dy7wv"
                description: Output address
              amount:
                type: array
                items:
                  type: object
                  description: The sum of all the UTXO per asset
                  properties:
                    unit:
                      type: string
                      format: Lovelace or concatenation of asset policy_id and hex-encoded asset_name
                      description: The unit of the value
                    quantity:
                      type: string
                      description: The quantity of the unit
                    data_hash:
                      type: string
                      description: The hash of the transaction output datum
                      nullable: true
                  required:
                    - unit
                    - quantity
                example:
                  - unit: "lovelace"
                    quantity: "42000000"
                    data_hash: null
                  - unit: "b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e"
                    quantity: "12"
                    data_hash: "9e478573ab81ea7a8e31891ce0648b81229f408d596a3483e6f4f9b92d3cf710"
            required:
              - address
              - amount
      required:
        - hash
        - inputs
        - outputs
    tx_content_stake_addr:
      type: array
      items:
        type: object
        properties:
          cert_index:
            type: integer
            example: 0
            description: Index of the certificate within the transaction
          address:
            type: string
            example: "stake1u9t3a0tcwune5xrnfjg4q7cpvjlgx9lcv0cuqf5mhfjwrvcwrulda"
            description: Delegation stake address
          registration:
            type: boolean
            example: true
            description: Registration boolean, false if deregistration
        required:
          - cert_index
          - address
          - registration
    tx_content_delegations:
      type: array
      items:
        type: object
        properties:
          index:
            type: integer
            example: 0
            description: Index of the certificate within the transaction
            deprecated: true
          cert_index:
            type: integer
            example: 0
            description: Index of the certificate within the transaction
          address:
            type: string
            example: "stake1u9r76ypf5fskppa0cmttas05cgcswrttn6jrq4yd7jpdnvc7gt0yc"
            description: Bech32 delegation stake address
          pool_id:
            type: string
            example: "pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy"
            description: Bech32 ID of delegated stake pool
          active_epoch:
            type: integer
            example: 210
            description: Epoch in which the delegation becomes active
        required:
          - index
          - cert_index
          - address
          - pool_id
          - active_epoch
    tx_content_withdrawals:
      type: array
      items:
        type: object
        properties:
          address:
            type: string
            example: "stake1u9r76ypf5fskppa0cmttas05cgcswrttn6jrq4yd7jpdnvc7gt0yc"
            description: Bech32 withdrawal address
          amount:
            type: string
            example: "431833601"
            description: Withdrawal amount in Lovelaces
        required:
          - address
          - amount
    tx_content_mirs:
      type: array
      items:
        type: object
        properties:
          pot:
            type: string
            enum: [reserve, treasury]
            example: "reserve"
            description: Source of MIR funds
          cert_index:
            type: integer
            example: 0
            description: Index of the certificate within the transaction
          address:
            type: string
            example: "stake1u9r76ypf5fskppa0cmttas05cgcswrttn6jrq4yd7jpdnvc7gt0yc"
            description: Bech32 stake address
          amount:
            type: string
            example: "431833601"
            description: MIR amount in Lovelaces
        required:
          - pot
          - cert_index
          - address
          - amount
    tx_content_pool_certs:
      type: array
      items:
        type: object
        properties:
          cert_index:
            type: integer
            example: 0
            description: Index of the certificate within the transaction
          pool_id:
            type: string
            example: "pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy"
            description: Bech32 encoded pool ID
          vrf_key:
            type: string
            example: "0b5245f9934ec2151116fb8ec00f35fd00e0aa3b075c4ed12cce440f999d8233"
            description: VRF key hash
          pledge:
            type: string
            example: "5000000000"
            description: Stake pool certificate pledge in Lovelaces
          margin_cost:
            type: number
            example: 0.05
            description: Margin tax cost of the stake pool
          fixed_cost:
            type: string
            example: "340000000"
            description: Fixed tax cost of the stake pool in Lovelaces
          reward_account:
            type: string
            example: "stake1uxkptsa4lkr55jleztw43t37vgdn88l6ghclfwuxld2eykgpgvg3f"
            description: Bech32 reward account of the stake pool
          owners:
            type: array
            items:
              type: string
              description: Bech32 accounts of the pool owners
            example:
              - "stake1u98nnlkvkk23vtvf9273uq7cph5ww6u2yq2389psuqet90sv4xv9v"
          metadata:
            type: object
            nullable: true
            properties:
              url:
                type: string
                nullable: true
                example: "https://stakenuts.com/mainnet.json"
                description: URL to the stake pool metadata
              hash:
                type: string
                nullable: true
                example: "47c0c68cb57f4a5b4a87bad896fc274678e7aea98e200fa14a1cb40c0cab1d8c"
                description: Hash of the metadata file
              ticker:
                type: string
                nullable: true
                example: "NUTS"
                description: Ticker of the stake pool
              name:
                type: string
                nullable: true
                example: "Stake Nuts"
                description: Name of the stake pool
              description:
                type: string
                nullable: true
                example: "The best pool ever"
                description: Description of the stake pool
              homepage:
                type: string
                nullable: true
                example: "https://stakentus.com/"
                description: Home page of the stake pool
            required:
              - url
              - hash
              - ticker
              - name
              - description
              - homepage
          relays:
            type: array
            items:
              type: object
              properties:
                ipv4:
                  type: string
                  nullable: true
                  example: "4.4.4.4"
                  description: IPv4 address of the relay
                ipv6:
                  type: string
                  nullable: true
                  example: "https://stakenuts.com/mainnet.json"
                  description: IPv6 address of the relay
                dns:
                  type: string
                  nullable: true
                  example: "relay1.stakenuts.com"
                  description: DNS name of the relay
                dns_srv:
                  type: string
                  nullable: true
                  example: "_relays._tcp.relays.stakenuts.com"
                  description: DNS SRV entry of the relay
                port:
                  type: integer
                  example: 3001
                  description: Network port of the relay
              required:
                - ipv4
                - ipv6
                - dns
                - dns_srv
                - port
          active_epoch:
            type: integer
            example: 210
            description: Epoch that the delegation becomes active
        required:
          - cert_index
          - pool_id
          - vrf_key
          - pledge
          - margin_cost
          - fixed_cost
          - reward_account
          - owners
          - metadata
          - relays
          - active_epoch
    tx_content_pool_retires:
      type: array
      items:
        type: object
        properties:
          cert_index:
            type: integer
            example: 0
            description: Index of the certificate within the transaction
          pool_id:
            type: string
            example: "pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy"
            description: Bech32 stake pool ID
          retiring_epoch:
            type: integer
            example: 216
            description: Retiring epoch
        required:
          - cert_index
          - pool_id
          - retiring_epoch
    tx_content_metadata:
      type: array
      items:
        type: object
        properties:
          label:
            type: string
            description: Metadata label
          json_metadata:
            oneOf:
              - type: string
              - type: object
            description: Content of the metadata
        required:
          - label
          - json_metadata
      example:
        - label: "1967"
          json_metadata:
            {
              "metadata": "https://nut.link/metadata.json",
              "hash": "6bf124f217d0e5a0a8adb1dbd8540e1334280d49ab861127868339f43b3948af",
            }
        - label: "1968"
          json_metadata:
            {
              "ADAUSD":
                [{ "value": "0.10409800535729975", "source": "ergoOracles" }],
            }
    tx_content_metadata_cbor:
      type: array
      items:
        type: object
        properties:
          label:
            type: string
            description: Metadata label
          cbor_metadata:
            type: string
            nullable: true
            description: Content of the CBOR metadata
        required:
          - label
          - cbor_metadata
      example:
        - label: "1968"
          cbor_metadata: "\\xa100a16b436f6d62696e6174696f6e8601010101010c"
    tx_content_redeemers:
      type: array
      items:
        type: object
        properties:
          tx_index:
            type: integer
            example: 0
            description: Index of the redeemer within the transaction
          purpose:
            type: string
            enum: [spend, mint, cert, reward]
            example: "spend"
            description: Validation purpose
          unit_mem:
            type: string
            example: "1700"
            description: The budget in Memory to run a script
          unit_steps:
            type: string
            example: "476468"
            description: The budget in CPU steps to run a script
          fee:
            type: string
            example: "172033"
            description: The fee consumed to run the script
        required:
          - tx_index
          - purpose
          - unit_mem
          - unit_steps
          - fee

    account_content:
      type: object
      properties:
        stake_address:
          type: string
          example: stake1ux3g2c9dx2nhhehyrezyxpkstartcqmu9hk63qgfkccw5rqttygt7
          description: Bech32 stake address
        active:
          type: boolean
          example: true
          description: Registration state of an account
        active_epoch:
          type: integer
          example: 412
          description: Epoch of the most recent action - registration or deregistration
        controlled_amount:
          type: string
          example: "619154618165"
          description: Balance of the account in Lovelaces
        rewards_sum:
          type: string
          example: "319154618165"
          description: Sum of all rewards for the account in the Lovelaces
        withdrawals_sum:
          type: string
          example: "12125369253"
          description: Sum of all the withdrawals for the account in Lovelaces
        reserves_sum:
          type: string
          example: "319154618165"
          description: Sum of all  funds from reserves for the account in the Lovelaces
        treasury_sum:
          type: string
          example: "12000000"
          description: Sum of all funds from treasury for the account in the Lovelaces
        withdrawable_amount:
          type: string
          example: "319154618165"
          description: Sum of available rewards that haven't been withdrawn yet for the account in the Lovelaces
        pool_id:
          type: string
          nullable: true
          example: pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy
          description: Bech32 pool ID that owns the account
      required:
        - stake_address
        - active
        - active_epoch
        - controlled_amount
        - rewards_sum
        - withdrawals_sum
        - reserves_sum
        - treasury_sum
        - withdrawable_amount
        - pool_id
    account_addresses_content:
      type: array
      items:
        type: object
        properties:
          address:
            type: string
            description: Address associated with the stake key
        required:
          - address
      example:
        - address: "addr1qx2kd28nq8ac5prwg32hhvudlwggpgfp8utlyqxu6wqgz62f79qsdmm5dsknt9ecr5w468r9ey0fxwkdrwh08ly3tu9sy0f4qd"
        - address: "addr1qys3czp8s9thc6u2fqed9yq3h24nyw28uk0m6mkgn9dkckjf79qsdmm5dsknt9ecr5w468r9ey0fxwkdrwh08ly3tu9suth4w4"
        - address: "addr1q8j55h253zcvl326sk5qdt2n8z7eghzspe0ekxgncr796s2f79qsdmm5dsknt9ecr5w468r9ey0fxwkdrwh08ly3tu9sjmd35m"
        - address: "addr1q8f7gxrprank3drhx8k5grlux7ene0nlwun8y9thu8mc3yjf79qsdmm5dsknt9ecr5w468r9ey0fxwkdrwh08ly3tu9sls6vnt"
    account_addresses_assets:
      type: array
      items:
        type: object
        description: The sum of all assets of all addresses associated with a given account
        properties:
          unit:
            type: string
            format: Concatenation of asset policy_id and hex-encoded asset_name
            description: The unit of the value
          quantity:
            type: string
            description: The quantity of the unit
        required:
          - unit
          - quantity
      example:
        - unit: "d5e6bf0500378d4f0da4e8dde6becec7621cd8cbf5cbb9b87013d4cc537061636542756433343132"
          quantity: "1"
        - unit: "b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e"
          quantity: "125"
    account_reward_content:
      type: array
      items:
        type: object
        properties:
          epoch:
            type: integer
            description: Epoch of the associated reward
          amount:
            type: string
            description: Rewards for given epoch in Lovelaces
          pool_id:
            type: string
            description: Bech32 pool ID being delegated to
        required:
          - epoch
          - amount
          - pool_id
      example:
        - epoch: 215
          amount: "12695385"
          pool_id: "pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy"
        - epoch: 216
          amount: "3586329"
          pool_id: "pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy"
        - epoch: 217
          amount: "0"
          pool_id: "pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy"
        - epoch: 218
          amount: "1395265"
          pool_id: "pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy"
    account_delegation_content:
      type: array
      items:
        type: object
        properties:
          active_epoch:
            type: integer
            example: 210
            description: Epoch in which the delegation becomes active
          tx_hash:
            type: string
            description: Hash of the transaction containing the delegation
          amount:
            type: string
            description: Rewards for given epoch in Lovelaces
          pool_id:
            type: string
            description: Bech32 ID of pool being delegated to
        required:
          - active_epoch
          - tx_hash
          - amount
          - pool_id
      example:
        - active_epoch: 210
          tx_hash: "2dd15e0ef6e6a17841cb9541c27724072ce4d4b79b91e58432fbaa32d9572531"
          amount: "12695385"
          pool_id: "pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy"
        - active_epoch: 242
          tx_hash: "1a0570af966fb355a7160e4f82d5a80b8681b7955f5d44bec0dde628516157f0"
          amount: "12691385"
          pool_id: "pool1kchver88u3kygsak8wgll7htr8uxn5v35lfrsyy842nkscrzyvj"
    account_history_content:
      type: array
      items:
        type: object
        properties:
          active_epoch:
            type: integer
            example: 210
            description: Epoch in which the stake was active
          amount:
            type: string
            description: Stake amount in Lovelaces
          pool_id:
            type: string
            description: Bech32 ID of pool being delegated to
        required:
          - active_epoch
          - amount
          - pool_id
      example:
        - active_epoch: 210
          amount: "12695385"
          pool_id: "pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy"
        - active_epoch: 211
          amount: "22695385"
          pool_id: "pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy"
    account_registration_content:
      type: array
      items:
        type: object
        properties:
          tx_hash:
            type: string
            description: Hash of the transaction containing the (de)registration certificate
          action:
            type: string
            enum: [registered, deregistered]
            description: Action in the certificate
        required:
          - tx_hash
          - action
      example:
        - tx_hash: "2dd15e0ef6e6a17841cb9541c27724072ce4d4b79b91e58432fbaa32d9572531"
          action: registered
        - tx_hash: "1a0570af966fb355a7160e4f82d5a80b8681b7955f5d44bec0dde628516157f0"
          action: deregistered
    account_withdrawal_content:
      type: array
      items:
        type: object
        properties:
          tx_hash:
            type: string
            description: Hash of the transaction containing the withdrawal
          amount:
            type: string
            description: Withdrawal amount in Lovelaces
        required:
          - tx_hash
          - amount
      example:
        - tx_hash: "48a9625c841eea0dd2bb6cf551eabe6523b7290c9ce34be74eedef2dd8f7ecc5"
          amount: "454541212442"
        - tx_hash: "4230b0cbccf6f449f0847d8ad1d634a7a49df60d8c142bb8cc2dbc8ca03d9e34"
          amount: "97846969"
    account_mir_content:
      type: array
      items:
        type: object
        properties:
          tx_hash:
            type: string
            description: Hash of the transaction containing the MIR
          amount:
            type: string
            description: MIR amount in Lovelaces
        required:
          - tx_hash
          - amount
      example:
        - tx_hash: "69705bba1d687a816ff5a04ec0c358a1f1ef075ab7f9c6cc2763e792581cec6d"
          amount: "2193707473"
        - tx_hash: "baaa77b63d4d7d2bb3ab02c9b85978c2092c336dede7f59e31ad65452d510c13"
          amount: "14520198574"
    address_content:
      type: object
      properties:
        address:
          type: string
          description: Bech32 encoded addresses
          example: addr1qxqs59lphg8g6qndelq8xwqn60ag3aeyfcp33c2kdp46a09re5df3pzwwmyq946axfcejy5n4x0y99wqpgtp2gd0k09qsgy6pz
        amount:
          type: array
          items:
            type: object
            description: The sum of all the UTXO per asset
            properties:
              unit:
                type: string
                format: Lovelace or concatenation of asset policy_id and hex-encoded asset_name
                description: The unit of the value
              quantity:
                type: string
                description: The quantity of the unit
            required:
              - unit
              - quantity
          example:
            - unit: "lovelace"
              quantity: "42000000"
            - unit: "b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e"
              quantity: "12"
        stake_address:
          type: string
          nullable: true
          example: stake1ux3g2c9dx2nhhehyrezyxpkstartcqmu9hk63qgfkccw5rqttygt7
          description: Stake address that controls the key
        type:
          type: string
          enum: [byron, shelley]
          example: shelley
          description: Address era
        script:
          type: boolean
          example: false
          description: True if this is a script address
      required:
        - address
        - amount
        - stake_address
        - type
        - script

    address_content_total:
      type: object
      properties:
        address:
          type: string
          description: Bech32 encoded address
          example: addr1qxqs59lphg8g6qndelq8xwqn60ag3aeyfcp33c2kdp46a09re5df3pzwwmyq946axfcejy5n4x0y99wqpgtp2gd0k09qsgy6pz
        received_sum:
          type: array
          items:
            type: object
            description: The sum of all the UTXO per asset
            properties:
              unit:
                type: string
                format: Lovelace or concatenation of asset policy_id and hex-encoded asset_name
                description: The unit of the value
              quantity:
                type: string
                description: The quantity of the unit
            required:
              - unit
              - quantity
          example:
            - unit: "lovelace"
              quantity: "42000000"
            - unit: "b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e"
              quantity: "12"
        sent_sum:
          type: array
          items:
            type: object
            description: The sum of all the UTXO per asset
            properties:
              unit:
                type: string
                format: Lovelace or concatenation of asset policy_id and hex-encoded asset_name
                description: The unit of the value
              quantity:
                type: string
                description: The quantity of the unit
            required:
              - unit
              - quantity
          example:
            - unit: "lovelace"
              quantity: "42000000"
            - unit: "b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e"
              quantity: "12"
        tx_count:
          type: integer
          example: 12
          description: Count of all transactions on the address
      required:
        - address
        - received_sum
        - sent_sum
        - tx_count
    address_utxo_content:
      type: array
      items:
        type: object
        properties:
          tx_hash:
            type: string
            description: Transaction hash of the UTXO
          tx_index:
            type: integer
            deprecated: true
            description: UTXO index in the transaction
          output_index:
            type: integer
            description: UTXO index in the transaction
          amount:
            type: array
            items:
              type: object
              description: The sum of all the UTXO per asset
              properties:
                unit:
                  type: string
                  format: Lovelace or concatenation of asset policy_id and hex-encoded asset_name
                  description: The unit of the value
                quantity:
                  type: string
                  description: The quantity of the unit
              required:
                - unit
                - quantity
          block:
            type: string
            description: Block hash of the UTXO
          data_hash:
            type: string
            description: The hash of the transaction output datum
            nullable: true
        required:
          - tx_hash
          - tx_index
          - output_index
          - amount
          - block
          - data_hash
      example:
        - tx_hash: "39a7a284c2a0948189dc45dec670211cd4d72f7b66c5726c08d9b3df11e44d58"
          output_index: 0
          amount:
            - unit: "lovelace"
              quantity: "42000000"
          block: "7eb8e27d18686c7db9a18f8bbcfe34e3fed6e047afaa2d969904d15e934847e6"
          data_hash: "9e478573ab81ea7a8e31891ce0648b81229f408d596a3483e6f4f9b92d3cf710"
        - tx_hash: "4c4e67bafa15e742c13c592b65c8f74c769cd7d9af04c848099672d1ba391b49"
          output_index: 0
          amount:
            - unit: "lovelace"
              quantity: "729235000"
          block: "953f1b80eb7c11a7ffcd67cbd4fde66e824a451aca5a4065725e5174b81685b7"
          data_hash: null
        - tx_hash: "768c63e27a1c816a83dc7b07e78af673b2400de8849ea7e7b734ae1333d100d2"
          output_index: 1
          amount:
            - unit: "lovelace"
              quantity: "42000000"
            - unit: "b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e"
              quantity: "12"
          block: "5c571f83fe6c784d3fbc223792627ccf0eea96773100f9aedecf8b1eda4544d7"
          data_hash: null
    address_txs_content:
      type: array
      items:
        type: string
        description: Hash of the transaction
      example:
        - "2dd15e0ef6e6a17841cb9541c27724072ce4d4b79b91e58432fbaa32d9572531"
        - "1a0570af966fb355a7160e4f82d5a80b8681b7955f5d44bec0dde628516157f0"
    address_transactions_content:
      type: array
      items:
        type: object
        properties:
          tx_hash:
            type: string
            description: Hash of the transaction
          tx_index:
            type: integer
            description: Transaction index within the block
          block_height:
            type: integer
            description: Block height
        required:
          - tx_hash
          - tx_index
          - block_height
      example:
        - tx_hash: "8788591983aa73981fc92d6cddbbe643959f5a784e84b8bee0db15823f575a5b"
          tx_index: 6
          block_height: 69
        - tx_hash: "52e748c4dec58b687b90b0b40d383b9fe1f24c1a833b7395cdf07dd67859f46f"
          tx_index: 9
          block_height: 4547
        - tx_hash: "e8073fd5318ff43eca18a852527166aa8008bee9ee9e891f585612b7e4ba700b"
          tx_index: 0
          block_height: 564654
    tx_metadata_labels:
      type: array
      items:
        type: object
        properties:
          label:
            type: string
            description: Metadata label
          cip10:
            type: string
            nullable: true
            description: CIP10 defined description
          count:
            type: string
            description: The count of metadata entries with a specific label
        required:
          - label
          - cip10
          - count
      example:
        - { label: "1990", cip10: null, count: "1" }
        - {
            label: "1967",
            cip10: "nut.link metadata oracles registry",
            count: "3",
          }
        - {
            label: "1968",
            cip10: "nut.link metadata oracles data points",
            count: "16321",
          }
    tx_metadata_label_json:
      type: array
      items:
        type: object
        properties:
          tx_hash:
            type: string
            description: Transaction hash that contains the specific metadata
          json_metadata:
            anyOf:
              - type: string
              - type: object
              - type: array
                items: {}
              - type: integer
              - type: number
              - type: boolean
            nullable: true
            description: Content of the JSON metadata
        required:
          - tx_hash
          - json_metadata
      example:
        - tx_hash: "257d75c8ddb0434e9b63e29ebb6241add2b835a307aa33aedba2effe09ed4ec8"
          json_metadata:
            {
              "ADAUSD":
                [{ "value": "0.10409800535729975", "source": "ergoOracles" }],
            }
        - tx_hash: "e865f2cc01ca7381cf98dcdc4de07a5e8674b8ea16e6a18e3ed60c186fde2b9c"
          json_metadata:
            {
              "ADAUSD":
                [{ "value": "0.15409850555139935", "source": "ergoOracles" }],
            }
        - tx_hash: 4237501da3cfdd53ade91e8911e764bd0699d88fd43b12f44a1f459b89bc91be
          json_metadata: null
    tx_metadata_label_cbor:
      type: array
      items:
        type: object
        properties:
          tx_hash:
            type: string
            description: Transaction hash that contains the specific metadata
          cbor_metadata:
            type: string
            nullable: true
            description: Content of the CBOR metadata
        required:
          - tx_hash
          - cbor_metadata
      example:
        - tx_hash: "257d75c8ddb0434e9b63e29ebb6241add2b835a307aa33aedba2effe09ed4ec8"
          cbor_metadata: null
        - tx_hash: "e865f2cc01ca7381cf98dcdc4de07a5e8674b8ea16e6a18e3ed60c186fde2b9c"
          cbor_metadata: null
        - tx_hash: 4237501da3cfdd53ade91e8911e764bd0699d88fd43b12f44a1f459b89bc91be
          cbor_metadata: "\\xa100a16b436f6d62696e6174696f6e8601010101010c"
    pool_list:
      type: array
      items:
        type: string
        description: Bech32 encoded pool ID
      example:
        - "pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy"
        - "pool1hn7hlwrschqykupwwrtdfkvt2u4uaxvsgxyh6z63703p2knj288"
        - "pool1ztjyjfsh432eqetadf82uwuxklh28xc85zcphpwq6mmezavzad2"
    pool_list_retire:
      type: array
      items:
        type: object
        properties:
          pool_id:
            type: string
            example: "pool1z5uqdk7dzdxaae5633fqfcu2eqzy3a3rgtuvy087fdld7yws0xt"
            description: Bech32 encoded pool ID
          epoch:
            type: integer
            example: 242
            description: Retirement epoch number
        required:
          - pool_id
          - epoch
      example:
        - pool_id: "pool19u64770wqp6s95gkajc8udheske5e6ljmpq33awxk326zjaza0q"
          epoch: 225
        - pool_id: "pool1dvla4zq98hpvacv20snndupjrqhuc79zl6gjap565nku6et5zdx"
          epoch: 215
        - pool_id: "pool1wvccajt4eugjtf3k0ja3exjqdj7t8egsujwhcw4tzj4rzsxzw5w"
          epoch: 231
    pool_history:
      type: array
      items:
        type: object
        properties:
          epoch:
            type: integer
            example: 233
            description: Epoch number
          blocks:
            type: integer
            example: 22
            description: Number of blocks created by pool
          active_stake:
            type: string
            example: "20485965693569"
            description: Active (Snapshot of live stake 2 epochs ago) stake in Lovelaces
          active_size:
            type: number
            example: 1.2345
            description: Pool size (percentage) of overall active stake at that epoch
          delegators_count:
            type: integer
            example: 115
            description: Number of delegators for epoch
          rewards:
            type: string
            example: "206936253674159"
            description: Total rewards received before distribution to delegators
          fees:
            type: string
            example: "1290968354"
            description: Pool operator rewards
        required:
          - epoch
          - blocks
          - active_stake
          - active_size
          - delegators_count
          - rewards
          - fees
    pool:
      type: object
      properties:
        pool_id:
          type: string
          example: "pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy"
          description: Bech32 pool ID
        hex:
          type: string
          example: "0f292fcaa02b8b2f9b3c8f9fd8e0bb21abedb692a6d5058df3ef2735"
          description: Hexadecimal pool ID.
        vrf_key:
          type: string
          example: "0b5245f9934ec2151116fb8ec00f35fd00e0aa3b075c4ed12cce440f999d8233"
          description: VRF key hash
        blocks_minted:
          type: integer
          example: 69
          description: Total minted blocks
        live_stake:
          type: string
          example: "6900000000"
        live_size:
          type: number
          example: 0.42
        live_saturation:
          type: number
          example: 0.93
        live_delegators:
          type: number
          example: 127
        active_stake:
          type: string
          example: "4200000000"
        active_size:
          type: number
          example: 0.43
        declared_pledge:
          type: string
          example: "5000000000"
          description: Stake pool certificate pledge
        live_pledge:
          type: string
          example: "5000000001"
          description: Stake pool current pledge
        margin_cost:
          type: number
          example: 0.05
          description: Margin tax cost of the stake pool
        fixed_cost:
          type: string
          example: "340000000"
          description: Fixed tax cost of the stake pool
        reward_account:
          type: string
          example: "stake1uxkptsa4lkr55jleztw43t37vgdn88l6ghclfwuxld2eykgpgvg3f"
          description: Bech32 reward account of the stake pool
        owners:
          type: array
          items:
            type: string
            description: Bech32 accounts of the pool owners
          example:
            - "stake1u98nnlkvkk23vtvf9273uq7cph5ww6u2yq2389psuqet90sv4xv9v"
        registration:
          type: array
          items:
            type: string
          example:
            - "9f83e5484f543e05b52e99988272a31da373f3aab4c064c76db96643a355d9dc"
            - "7ce3b8c433bf401a190d58c8c483d8e3564dfd29ae8633c8b1b3e6c814403e95"
            - "3e6e1200ce92977c3fe5996bd4d7d7e192bcb7e231bc762f9f240c76766535b9"
        retirement:
          type: array
          items:
            type: string
            example: "252f622976d39e646815db75a77289cf16df4ad2b287dd8e3a889ce14c13d1a8"
      required:
        - pool_id
        - hex
        - vrf_key
        - blocks_minted
        - live_stake
        - live_size
        - live_saturation
        - live_delegators
        - active_stake
        - active_size
        - declared_pledge
        - live_pledge
        - margin_cost
        - fixed_cost
        - reward_account
        - owners
        - registration
        - retirement
    pool_metadata:
      type: object
      properties:
        pool_id:
          type: string
          example: "pool1pu5jlj4q9w9jlxeu370a3c9myx47md5j5m2str0naunn2q3lkdy"
          description: Bech32 pool ID
        hex:
          type: string
          example: "0f292fcaa02b8b2f9b3c8f9fd8e0bb21abedb692a6d5058df3ef2735"
          description: Hexadecimal pool ID
        url:
          type: string
          nullable: true
          example: "https://stakenuts.com/mainnet.json"
          description: URL to the stake pool metadata
        hash:
          type: string
          nullable: true
          example: "47c0c68cb57f4a5b4a87bad896fc274678e7aea98e200fa14a1cb40c0cab1d8c"
          description: Hash of the metadata file
        ticker:
          type: string
          nullable: true
          example: "NUTS"
          description: Ticker of the stake pool
        name:
          type: string
          nullable: true
          example: "Stake Nuts"
          description: Name of the stake pool
        description:
          type: string
          nullable: true
          example: "The best pool ever"
          description: Description of the stake pool
        homepage:
          type: string
          nullable: true
          example: "https://stakentus.com/"
          description: Home page of the stake pool
      required:
        - pool_id
        - hex
        - url
        - hash
        - ticker
        - name
        - description
        - homepage
    pool_relays:
      type: array
      items:
        type: object
        properties:
          ipv4:
            type: string
            nullable: true
            example: "4.4.4.4"
            description: IPv4 address of the relay
          ipv6:
            type: string
            nullable: true
            example: "https://stakenuts.com/mainnet.json"
            description: IPv6 address of the relay
          dns:
            type: string
            nullable: true
            example: "relay1.stakenuts.com"
            description: DNS name of the relay
          dns_srv:
            type: string
            nullable: true
            example: "_relays._tcp.relays.stakenuts.com"
            description: DNS SRV entry of the relay
          port:
            type: integer
            example: 3001
            description: Network port of the relay
        required:
          - ipv4
          - ipv6
          - dns
          - dns_srv
          - port
    pool_delegations:
      type: array
      items:
        type: object
        properties:
          tx_hash:
            type: string
            description: Transaction ID
          cert_index:
            type: integer
            description: Certificate within the transaction
        required:
          - tx_hash
          - cert_index
      example:
        - tx_hash: "6804edf9712d2b619edb6ac86861fe93a730693183a262b165fcc1ba1bc99cad"
          cert_index: 0
        - tx_hash: "9c190bc1ac88b2ab0c05a82d7de8b71b67a9316377e865748a89d4426c0d3005"
          cert_index: 0
        - tx_hash: "e14a75b0eb2625de7055f1f580d70426311b78e0d36dd695a6bdc96c7b3d80e0"
          cert_index: 1

    pool_blocks:
      type: array
      items:
        type: string
        description: Block hashes
      example:
        - "d8982ca42cfe76b747cc681d35d671050a9e41e9cfe26573eb214e94fe6ff21d"
        - "026436c539e2ce84c7f77ffe669f4e4bbbb3b9c53512e5857dcba8bb0b4e9a8c"
        - "bcc8487f419b8c668a18ea2120822a05df6dfe1de1f0fac3feba88cf760f303c"
        - "86bf7b4a274e0f8ec9816171667c1b4a0cfc661dc21563f271acea9482b62df7"

    pool_updates:
      type: array
      items:
        type: object
        properties:
          tx_hash:
            type: string
            description: Transaction ID
          cert_index:
            type: integer
            description: Certificate within the transaction
          action:
            type: string
            enum: [registered, deregistered]
            description: Action in the certificate
        required:
          - tx_hash
          - cert_index
          - action
      example:
        - tx_hash: "6804edf9712d2b619edb6ac86861fe93a730693183a262b165fcc1ba1bc99cad"
          cert_index: 0
          action: "registered"
        - tx_hash: "9c190bc1ac88b2ab0c05a82d7de8b71b67a9316377e865748a89d4426c0d3005"
          cert_index: 0
          action: "deregistered"
        - tx_hash: "e14a75b0eb2625de7055f1f580d70426311b78e0d36dd695a6bdc96c7b3d80e0"
          cert_index: 1
          action: "registered"

    pool_delegators:
      type: array
      items:
        type: object
        properties:
          address:
            type: string
            description: Bech32 encoded stake addresses
          live_stake:
            type: string
            description: Currently delegated amount
        required:
          - address
          - live_stake
      example:
        - address: "stake1ux4vspfvwuus9uwyp5p3f0ky7a30jq5j80jxse0fr7pa56sgn8kha"
          live_stake: "1137959159981411"
        - address: "stake1uylayej7esmarzd4mk4aru37zh9yz0luj3g9fsvgpfaxulq564r5u"
          live_stake: "16958865648"
        - address: "stake1u8lr2pnrgf8f7vrs9lt79hc3sxm8s2w4rwvgpncks3axx6q93d4ck"
          live_stake: "18605647"

    assets:
      type: array
      items:
        type: object
        properties:
          asset:
            type: string
            format: Concatenation of the policy_id and hex-encoded asset_name
            description: Asset identifier
          quantity:
            type: string
            description: Current asset quantity
        required:
          - asset
          - quantity
      example:
        - asset: "b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e"
          quantity: "1"
        - asset: "b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e75d"
          quantity: "100000"
        - asset: "6804edf9712d2b619edb6ac86861fe93a730693183a262b165fcc1ba1bc99cad"
          quantity: "18605647"

    asset:
      type: object
      properties:
        asset:
          type: string
          example: "b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e"
          description: Hex-encoded asset full name
        policy_id:
          type: string
          example: "b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a7"
          description: Policy ID of the asset
        asset_name:
          type: string
          nullable: true
          example: "6e7574636f696e"
          description: Hex-encoded asset name of the asset
        fingerprint:
          type: string
          example: "asset1pkpwyknlvul7az0xx8czhl60pyel45rpje4z8w"
          description: CIP14 based user-facing fingerprint
        quantity:
          type: string
          example: "12000"
          description: Current asset quantity
        initial_mint_tx_hash:
          type: string
          example: "6804edf9712d2b619edb6ac86861fe93a730693183a262b165fcc1ba1bc99cad"
          description: ID of the initial minting transaction
        mint_or_burn_count:
          type: integer
          example: 1
          description: Count of mint and burn transactions
        onchain_metadata:
          type: object
          additionalProperties: true
          nullable: true
          description: |
            On-chain metadata stored in the minting transaction under label 721,
            community discussion around the standard ongoing at https://github.com/cardano-foundation/CIPs/pull/85
          properties:
            name:
              type: string
              description: Name of the asset
              example: "My NFT token"
            image:
              oneOf:
                - type: string
                - type: array
              description: URI(s) of the associated asset
              example: "ipfs://ipfs/QmfKyJ4tuvHowwKQCbCHj4L5T3fSj8cjs7Aau8V7BWv226"
        metadata:
          type: object
          nullable: true
          properties:
            name:
              type: string
              example: "nutcoin"
              description: Asset name
            description:
              type: string
              example: "The Nut Coin"
              description: Asset description
            ticker:
              type: string
              nullable: true
              example: "nutc"
            url:
              type: string
              nullable: true
              example: "https://www.stakenuts.com/"
              description: Asset website
            logo:
              type: string
              nullable: true
              example: "iVBORw0KGgoAAAANSUhEUgAAADAAAAAoCAYAAAC4h3lxAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAABmJLR0QA/wD/AP+gvaeTAAAAB3RJTUUH5QITCDUPjqwFHwAAB9xJREFUWMPVWXtsU9cZ/8499/r6dZ3E9rUdO7ZDEgglFWO8KaOsJW0pCLRKrN1AqqYVkqoqrYo0ja7bpElru1WairStFKY9WzaE1E1tx+jokKqwtqFNyhKahEJJyJNgJ37E9r1+3HvO/sFR4vhx7SBtfH/F3/l93/f7ne/4PBxEKYU72dj/ZfH772v1TU+HtqbTaX8wOO01GPQpRVH7JEm+vGHDuq6z7/8jUSoHKtaBKkEUFUXdajDy1hUrmrs6zn/wWS7m7pZVjMUirKGUTnzc+e9xLcTrPPVfZzDz06Sc2lyQGEIyAPzT7Xa+dvE/3e+XLaCxoflHsVj8MAAYs74aa/WHoenwvpkZKeFy2Z5NJlOPUkqXZccFwSSrKjlyffjLH+TL6XTUGTGL/6hklD3ldIrj2M5MRmkLBMcvaRLQ1Nj88sxM/HCBfMP+eu/OYGDqe6l0WmpoqJ/88upgrU7HrQNA/cFg6MlkKiLlBtVUO40cx54BgHvLIT/HJLvdeqh/4NKxogKWN7fsCoUi7xTLxLJ4vLq6ak//wKVOrdXtttrTDMPsqJA8AAAwDErdu3VL3alTf5ma9eWCpoKhn5dKpCiqJxicPucQPVu0FHaInn35yHMcKwPAa4SQ3QCwFgDWUko3qSr5vqqSgTypuEg4Mo/zvA74/Y0rZSnZU8akSHV17k2fXfy0txjI5224kEym1s/1EUI7LBbztweHrkzkizn49LP6U6feepFSeggAQK/n04SQZ8bGrxdeQjZrbRvGzLH5hcibRqOhPplMfS1fIY5jz4xPDBdcGggho2h3z9sOLRazdG3wqp9SMgUlzGZ17SSEPsRx7J8CwfGu3PF57WhqqjfN/VxVJUxKUrIdITAXKpDJKFscosdfaFy0u+/K9aXTmXe0kAcAmA5Nng5Hbj6Tj/wCAYFAcN7uEY3GXGazMSHLqVVFapgBoMPna9yqhRAAgCTJMa3YUjZPgNFkSlWYx5eUkx+0tKx83V3rF+cVYJjruWCe133DIXqMmrNrFSDabRcWkywYmG5XFOW6aHcfb9324CoAgMmbo9MIoXkneCajiAihV/c/8eSiBSw4BxyiZxQA6m7H7FBKT2CMn2MY5jFFUX6ZO+5w2j8aHZ7YH40FByrJD5DnHGAY5uTtIA8AgBDaR4F2Yxb3WizCgmtA4ObUPSazodduqz3Suu0hf0U1cjvgdNSJ1dWWveFwdDUAtAiC2Uopdcdi8c9Zlh3GmDGl05mtAKAvo47EcdwThJCjqqpWFxALlNITomg73tff21GRAJez7iVK4WGGYfoJIQduBsbm7UrLm1ueCoUiv65kpiilw1ZbzcFoZOYoIcRTAn6eYZgXJm+Oni+Vd3YJbdyweSch9HlK6SpVVfcyDDq7Yf3m2XPBIXraKyV/a4b9UkLawbLsZgB4rwR8CyGkw13r+5fX27BckwBAEJ47oKpk8+DgUIdod7fV1vqOAMDrlZLPmqKoB+rrvXIgOP6w0WjYy3Ls5RL4bUk52bVm9fqnCk7M3CXU2ND8+MxM7BcIIftiyRYyntcdHh0bmr0wfmXl6p2SJB2KRmP3l4j7zejYUFtRAQAAgslm1Bv4nyGEDpYiIwjmjw0G/RjP866JiclNqqqWfKLq9fyZkdHBBXcnl9O71GDgD8bj0ncRQqZ8sRgzL9yYHH2pqICsOUTPLgA4CXNeZFmzWIS/YhYfjUZmvqPjuceSckrz25pS2h2cmlhbaBwhzr6kfsnL8Xhif55YYFl23Y3Jkdl7EVMoUSA4/q6qqNsBIPd11e52u45FwtG3CSH7yiEPAGC1Vt9dXGBmanDoygFLlbAjtzZCCMyC6VeaOpA1l9N7l1kwtauKaozHE28YTQaQpeR7+TqjxXheR0fHhhgt2CX1S3clEtKC16HL5djYe+niBU0CcmYA2W21/Qih5ZqDcoxlMZ24MaJJAABA87IVJ8Lh6N65Pr1B/+LIyLUfAhRZQvnM6ah7ZDHkAQB0vK6/HHxNTc2ruT5Zkldn/y5LACFk+2LIAwAwCGl6yGSt88KHXbmrBCHkqEgAz+vWLFZALJb4qNwYhFDhCSknkSwnQ4sVgDFeWg7+gQe2r1tAmkGTFQlACHWVg89nhJA9ot3dphV/eeCLp/Pw6K5IQP0S39uLFXCLwDG7zf1cKZxD9LSlUunHc/12u/2t2Vzl/rzu8zb8PZlM7bwdQgDgPK/nX2nddt+53//ht3LW2dS0fF0iLj2vquojuQFmwXRucPBKa8UCmpe1iOFwpAsAfLdJBFBKwVIlXJ2JxqKCxbwyHkvoCkAlv9/71U+7Oq+UJWDZ0hViJBL1cRynbNq0sSeeiPl6ei4NqIqq6TSmlB7X6bjuTEY5pgWfzwxGPZhMpt39/b3vzvWXFGCzulZjjM/DrauDwcAr8bjcgzGjZUuVBMH8k2uDX7wCAFDr8n2LEPI7SqmhTP6SzVbz6MDlz0/nDpT8EmOM22HOvUeWU2wp8iyLgRL6hk7Hrc2SBwC4MTlykmXZRozxn00mbVcphNA5jJmV+chr6oDd5l6jN/A/TqfSuwEAGITGMIsvGo3GTwTB3Dc2NjGSxdZYq4VIOOoNBANnKE0XPXE3brjHOTQ08k2MmVZOxzVJCbkFIQSCYEphzPaFQuGzTpfjb319PZ8UFXin/5OvrHPg/9HueAH/BSUqOuNZm4fyAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDIxLTAyLTE5VDA4OjUyOjI1KzAwOjAwCmFGlgAAACV0RVh0ZGF0ZTptb2RpZnkAMjAyMS0wMi0xOVQwODo1MjoyMyswMDowMBjsyxAAAAAASUVORK5CYII="
              description: Base64 encoded logo of the asset
            decimals:
              type: integer
              maximum: 255
              nullable: true
              example: 6
              description: Number of decimal places of the asset unit
          required:
            - name
            - description
            - ticker
            - url
            - logo
            - decimals
      required:
        - asset
        - policy_id
        - asset_name
        - fingerprint
        - quantity
        - initial_mint_tx_hash
        - mint_or_burn_count
        - metadata
        - onchain_metadata

    asset_history:
      type: array
      items:
        type: object
        properties:
          tx_hash:
            type: string
            description: Hash of the transaction containing the asset action
          action:
            type: string
            enum: [minted, burned]
            description: Action executed upon the asset policy
          amount:
            type: string
            description: Asset amount of the specific action
        required:
          - tx_hash
          - action
          - amount
      example:
        - tx_hash: "2dd15e0ef6e6a17841cb9541c27724072ce4d4b79b91e58432fbaa32d9572531"
          amount: "10"
          action: "minted"
        - tx_hash: "9c190bc1ac88b2ab0c05a82d7de8b71b67a9316377e865748a89d4426c0d3005"
          amount: "5"
          action: "burned"
        - tx_hash: "1a0570af966fb355a7160e4f82d5a80b8681b7955f5d44bec0dde628516157f0"
          amount: "5"
          action: "burned"

    asset_txs:
      type: array
      items:
        type: string
        description: Hash of the transaction
      example:
        - "8788591983aa73981fc92d6cddbbe643959f5a784e84b8bee0db15823f575a5b"
        - "52e748c4dec58b687b90b0b40d383b9fe1f24c1a833b7395cdf07dd67859f46f"
        - "e8073fd5318ff43eca18a852527166aa8008bee9ee9e891f585612b7e4ba700b"

    asset_transactions:
      type: array
      items:
        type: object
        properties:
          tx_hash:
            type: string
            description: Hash of the transaction
          tx_index:
            type: integer
            description: Transaction index within the block
          block_height:
            type: integer
            description: Block height
        required:
          - tx_hash
          - tx_index
          - block_height
      example:
        - tx_hash: "8788591983aa73981fc92d6cddbbe643959f5a784e84b8bee0db15823f575a5b"
          tx_index: 6
          block_height: 69
        - tx_hash: "52e748c4dec58b687b90b0b40d383b9fe1f24c1a833b7395cdf07dd67859f46f"
          tx_index: 9
          block_height: 4547
        - tx_hash: "e8073fd5318ff43eca18a852527166aa8008bee9ee9e891f585612b7e4ba700b"
          tx_index: 0
          block_height: 564654

    asset_addresses:
      type: array
      items:
        type: object
        properties:
          address:
            type: string
            description: Address containing the specific asset
          quantity:
            type: string
            description: Asset quantity on the specific address
        required:
          - address
          - quantity
      example:
        - address: "addr1qxqs59lphg8g6qndelq8xwqn60ag3aeyfcp33c2kdp46a09re5df3pzwwmyq946axfcejy5n4x0y99wqpgtp2gd0k09qsgy6pz"
          quantity: "1"
        - address: "addr1qyhr4exrgavdcn3qhfcc9f939fzsch2re5ry9cwvcdyh4x4re5df3pzwwmyq946axfcejy5n4x0y99wqpgtp2gd0k09qdpvhza"
          quantity: "100000"
        - address: "addr1q8zup8m9ue3p98kxlxl9q8rnyan8hw3ul282tsl9s326dfj088lvedv4zckcj24arcpasr0gua4c5gq4zw2rpcpjk2lq8cmd9l"
          quantity: "18605647"

    asset_policy:
      type: array
      items:
        type: object
        properties:
          asset:
            type: string
            description: Concatenation of the policy_id and hex-encoded asset_name
          quantity:
            type: string
            description: Current asset quantity
        required:
          - asset
          - quantity
      example:
        - asset: "b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a76e7574636f696e"
          quantity: "1"
        - asset: "b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb38a766e"
          quantity: "100000"
        - asset: "b0d07d45fe9514f80213f4020e5a61241458be626841cde717cb574636f696e"
          quantity: "18605647"

    scripts:
      type: array
      items:
        type: object
        properties:
          script_hash:
            type: string
            description: Script hash
        required:
          - script_hash
      example:
        - script_hash: "13a3efd825703a352a8f71f4e2758d08c28c564e8dfcce9f77776ad1"
        - script_hash: "e1457a0c47dfb7a2f6b8fbb059bdceab163c05d34f195b87b9f2b30e"
        - script_hash: "a6e63c0ff05c96943d1cc30bf53112ffff0f34b45986021ca058ec54"

    script:
      type: object
      properties:
        script_hash:
          type: string
          example: "13a3efd825703a352a8f71f4e2758d08c28c564e8dfcce9f77776ad1"
          description: Script hash
        type:
          type: string
          enum: [timelock, plutus]
          example: "plutus"
          description: Type of the script language
        serialised_size:
          type: integer
          nullable: true
          description: The size of the CBOR serialised script, if a Plutus script
          example: 3119
      required:
        - script_hash
        - type
        - serialised_size

    script_redeemers:
      type: array
      items:
        type: object
        properties:
          tx_hash:
            type: string
            example: "1a0570af966fb355a7160e4f82d5a80b8681b7955f5d44bec0dce628516157f0"
            description: Hash of the transaction
          tx_index:
            type: integer
            example: 0
            description: The index of the redeemer pointer in the transaction
          purpose:
            type: string
            enum: [spend, mint, cert, reward]
            example: "spend"
            description: Validation purpose
          unit_mem:
            type: string
            example: "1700"
            description: The budget in Memory to run a script
          unit_steps:
            type: string
            example: "476468"
            description: The budget in CPU steps to run a script
          fee:
            type: string
            example: "172033"
            description: The fee consumed to run the script
        required:
          - tx_hash
          - tx_index
          - purpose
          - unit_mem
          - unit_steps
          - fee

    metrics:
      type: array
      items:
        type: object
        properties:
          time:
            type: integer
            description: Starting time of the call count interval (ends midnight UTC) in UNIX time
          calls:
            type: integer
            description: Sum of all calls for a particular day
        required:
          - time
          - calls
      example:
        - time: 1612543884
          calls: 42
        - time: 1614523884
          calls: 6942

    metrics_endpoints:
      type: array
      items:
        type: object
        properties:
          time:
            type: integer
            description: Starting time of the call count interval (ends midnight UTC) in UNIX time
          calls:
            type: integer
            description: Sum of all calls for a particular day and endpoint
          endpoint:
            type: string
            description: Endpoint parent name
        required:
          - time
          - calls
          - endpoint
      example:
        - time: 1612543814
          calls: 182
          endpoint: "block"
        - time: 1612543814
          calls: 42
          endpoint: "epoch"
        - time: 1612543812
          calls: 775
          endpoint: "block"
        - time: 1612523884
          calls: 4
          endpoint: "epoch"
        - time: 1612553884
          calls: 89794
          endpoint: "block"

    nutlink_address:
      type: object
      properties:
        address:
          type: string
          description: Bech32 encoded address
          example: addr1qxqs59lphg8g6qndelq8xwqn60ag3aeyfcp33c2kdp46a09re5df3pzwwmyq946axfcejy5n4x0y99wqpgtp2gd0k09qsgy6pz
        metadata_url:
          type: string
          description: URL of the specific metadata file
          example: "https://nut.link/metadata.json"
        metadata_hash:
          type: string
          description: Hash of the metadata file
          example: "6bf124f217d0e5a0a8adb1dbd8540e1334280d49ab861127868339f43b3948af"
        metadata:
          type: object
          description: The cached metadata of the `metadata_url` file.
          additionalProperties: true
          nullable: true
      required:
        - address
        - metadata_url
        - metadata_hash
        - metadata

    nutlink_address_ticker:
      type: array
      items:
        type: object
        properties:
          tx_hash:
            type: string
            description: Hash of the transaction
          block_height:
            type: integer
            description: Block height of the record
          tx_index:
            type: integer
            description: Transaction index within the block
          payload:
            anyOf:
              - type: string
              - type: object
              - type: array
                items: {}
              - type: integer
              - type: number
              - type: boolean
            additionalProperties: true
            description: Content of the ticker
        required:
          - tx_hash
          - tx_index
          - block_height
          - payload
      example:
        - {
            tx_hash: "e8073fd5318ff43eca18a852527166aa8008bee9ee9e891f585612b7e4ba700b",
            block_height: 2657092,
            tx_index: 8,
            payload:
              [
                { source: "coinGecko", value: "1.29" },
                { source: "cryptoCompare", value: "1.283" },
              ],
          }

    nutlink_address_tickers:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
            description: Name of the ticker
          count:
            type: integer
            description: Number of ticker records
          latest_block:
            type: integer
            description: Block height of the latest record
        required:
          - name
          - count
          - latest_block
      example:
        - name: "ADAUSD"
          count: 1980038
          latest_block: 2657092
        - name: "ADAEUR"
          count: 1980038
          latest_block: 2657092
        - name: "ADABTC"
          count: 1980038
          latest_block: 2657092

    nutlink_tickers_ticker:
      type: array
      items:
        type: object
        properties:
          address:
            type: string
            description: Address of a metadata oracle
          tx_hash:
            type: string
            description: Hash of the transaction
          block_height:
            type: integer
            description: Block height of the record
          tx_index:
            type: integer
            description: Transaction index within the block
          payload:
            anyOf:
              - type: string
              - type: object
              - type: array
                items: {}
              - type: integer
              - type: number
              - type: boolean
            additionalProperties: true
            description: Content of the ticker
        required:
          - address
          - tx_hash
          - block_height
          - tx_index
          - payload
      example:
        - {
            address: "addr_test1qpmtp5t0t5y6cqkaz7rfsyrx7mld77kpvksgkwm0p7en7qum7a589n30e80tclzrrnj8qr4qvzj6al0vpgtnmrkkksnqd8upj0",
            tx_hash: "e8073fd5318ff43eca18a852527166aa8008bee9ee9e891f585612b7e4ba700b",
            block_height: 2657092,
            tx_index: 8,
            payload:
              [
                { source: "coinGecko", value: "1.29" },
                { source: "cryptoCompare", value: "1.283" },
              ],
          }

    network:
      type: object
      properties:
        supply:
          type: object
          properties:
            max:
              type: string
              description: Maximum supply in Lovelaces
              example: "45000000000000000"
            total:
              type: string
              description: Current total (max supply - reserves) supply in Lovelaces
              example: "32890715183299160"
            circulating:
              type: string
              description: Current circulating (UTXOs + withdrawables) supply in Lovelaces
              example: "32412601976210393"
            locked:
              type: string
              description: Curent locked supply by scripts in Lovelaces
              example: "125006953355"
          required:
            - max
            - total
            - circulating
            - locked
        stake:
          type: object
          properties:
            live:
              type: string
              example: "23204950463991654"
              description: Current live stake in Lovelaces
            active:
              type: string
              description: Current active stake in Lovelaces
              example: "22210233523456321"
          required:
            - live
            - active
      required:
        - supply
        - stake

    empty_object:
      type: object
